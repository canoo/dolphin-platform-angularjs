{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/node_modules/browserify/node_modules/browser-pack/_prelude.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/fn/map.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/fn/promise.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/fn/set.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_a-function.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_add-to-unscopables.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_an-instance.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_an-object.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_array-from-iterable.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_array-includes.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_array-methods.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_array-species-constructor.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_array-species-create.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_classof.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_cof.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_collection-strong.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_collection-to-json.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_collection.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_core.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_ctx.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_defined.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_descriptors.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_dom-create.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_enum-bug-keys.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_export.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_fails.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_for-of.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_global.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_has.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_hide.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_html.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_ie8-dom-define.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_invoke.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iobject.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_is-array-iter.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_is-array.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_is-object.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iter-call.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iter-create.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iter-define.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iter-detect.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iter-step.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_iterators.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_library.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_meta.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_microtask.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_object-create.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_object-dp.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_object-dps.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_object-gpo.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_object-keys-internal.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_object-keys.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_property-desc.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_redefine-all.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_redefine.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_set-species.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_set-to-string-tag.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_shared-key.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_shared.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_species-constructor.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_string-at.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_task.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_to-index.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_to-integer.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_to-iobject.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_to-length.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_to-object.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_to-primitive.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_uid.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/_wks.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/core.get-iterator-method.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es6.map.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es6.promise.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es6.set.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es7.map.to-json.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/es7.set.to-json.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/bower_components/core.js/library/modules/web.dom.iterable.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/node_modules/emitter-component/index.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/attribute.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/beanmanager.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/classrepo.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientAttribute.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientConnector.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientContextFactory.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientDolphin.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientModelStore.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientPresentationModel.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/clientcontext.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commandBatcher.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/codec.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/codecError.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/commandConstants.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/commandFactory.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/attributeMetadataChangedCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/callActionCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/changeAttributeMetadataCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/createContextCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/createControllerCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/createPresentationModelCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/deletePresentationModelCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/destroyContextCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/destroyControllerCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/interruptLongPollCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/presentationModelDeletedCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/startLongPollCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/commands/impl/valueChangedCommand.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/connector.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/constants.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/controllermanager.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/controllerproxy.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/dolphinBuilder.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/errors.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/eventBus.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/httpTransmitter.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/noTransmitter.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/openDolphin.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/platformHttpTransmitter.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/remotingErrorHandler.js","bower_components/dolphin-platform-js/dist/bower_components/dolphin-platform-js/dist/src/utils.js","src/dolphin-platform-angular.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","_dereq_","module","Map","Promise","Set","it","TypeError","Constructor","name","forbiddenField","undefined","isObject","forOf","iter","ITERATOR","result","push","toIObject","toLength","toIndex","IS_INCLUDES","$this","el","fromIndex","value","O","index","ctx","IObject","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","callbackfn","that","val","res","self","isArray","SPECIES","original","C","constructor","Array","prototype","speciesConstructor","cof","TAG","ARG","arguments","T","B","key","tryGet","Object","callee","toString","slice","dP","redefineAll","anInstance","defined","$iterDefine","step","setSpecies","DESCRIPTORS","fastKey","SIZE","getEntry","entry","_i","_f","k","wrapper","NAME","ADDER","iterable","_l","this","data","p","next","prev","v","iterated","kind","_t","_k","classof","from","global","$export","meta","fails","hide","setToStringTag","each","methods","common","IS_WEAK","Base","proto","forEach","entries","target","_c","split","KEY","IS_ADDER","b","size","getConstructor","NEED","G","W","F","setStrong","core","version","__e","aFunction","fn","c","apply","defineProperty","get","document","is","createElement","PROTOTYPE","type","source","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","S","IS_PROTO","P","IS_BIND","IS_WRAP","expProto","Function","virtual","R","U","exec","isArrayIter","anObject","getIterFn","BREAK","RETURN","_exports","iterator","iterFn","done","window","Math","__g","hasOwnProperty","createDesc","object","documentElement","args","un","propertyIsEnumerable","Iterators","ArrayProto","arg","_typeof","ret","descriptor","IteratorPrototype","LIBRARY","redefine","has","$iterCreate","getPrototypeOf","BUGGY","keys","VALUES","returnThis","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","SAFE_CLOSING","riter","skipClosing","safe","arr","META","setDesc","id","isExtensible","FREEZE","preventExtensions","setMeta","w","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","isNode","head","last","notify","flush","parent","domain","exit","enter","nextTick","toggle","node","createTextNode","observe","characterData","resolve","promise","then","task","dPs","enumBugKeys","IE_PROTO","Empty","_createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","open","write","lt","close","Properties","IE8_DOM_DEFINE","toPrimitive","Attributes","getKeys","defineProperties","ObjectProto","arrayIndexOf","names","$keys","bitmap","def","tag","stat","configurable","shared","uid","SHARED","store","D","toInteger","TO_STRING","pos","String","charCodeAt","charAt","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","run","listener","event","port2","port1","onmessage","postMessage","addEventListener","importScripts","removeChild","max","min","ceil","floor","isNaN","valueOf","px","random","concat","_Symbol","Symbol","USE_SYMBOL","getIteratorMethod","addToUnscopables","Arguments","strong","Internal","GenericPromiseCapability","Wrapper","microtask","PROMISE","$Promise","empty","USE_NATIVE","FakePromise","PromiseRejectionEvent","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","isReject","_n","chain","_v","ok","_s","reaction","handler","fail","_h","onHandleUnhandled","onUnhandled","abrupt","console","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","executor","err","onFulfilled","onRejected","capability","x","all","values","remaining","$index","alreadyCalled","$at","point","toJSON","TO_STRING_TAG","collections","Collection","Emitter","obj","on","once","off","removeListener","removeAllListeners","removeEventListener","cb","listeners","hasListeners","Attribute","QUALIFIER_PROPERTY","VALUE","_map","_utils","BeanManager","classRepository","addedHandlers","_map2","default","removedHandlers","updatedHandlers","arrayUpdatedHandlers","allAddedHandlers","allRemovedHandlers","allUpdatedHandlers","allArrayUpdatedHandlers","onBeanAdded","bean","handlerList","exists","warn","onBeanRemoved","onBeanUpdate","propertyName","newValue","oldValue","onArrayUpdate","count","newElements","notifyBeanChange","removedElements","notifyArrayChange","collection","predicate","eventHandler","filter","consts","_interopRequireWildcard","blocked","ClassRepository","dolphin","classes","beanFromDolphin","beanToDolphin","classInfos","beanAddedHandlers","beanRemovedHandlers","propertyUpdateHandlers","arrayUpdateHandlers","BYTE","SHORT","INT","LONG","parseInt","FLOAT","DOUBLE","parseFloat","BOOLEAN","toLowerCase","STRING","ENUM","DOLPHIN_BEAN","DATE","CALENDAR","LOCAL_DATE_FIELD_TYPE","LOCAL_DATE_TIME_FIELD_TYPE","ZONED_DATE_TIME_FIELD_TYPE","Date","fixType","toISOString","modelId","to","model","findPresentationModelById","presentationModelType","attributes","attribute","element","toDolphin","presentationModel","list","findAttributeByPropertyName","getValue","setValue","fromDolphin","isBlocked","array","removedElementsCount","sendListSplice","classInfo","search","onValueChange","validateList","block","unblock","param","_eventBus","ClientAttribute","qualifier","clientAttributeInstanceCount","valueChangeBus","_eventBus2","qualifierChangeBus","setQualifier","getQualifier","verifiedValue","checkValue","trigger","sendToServer","newQualifier","oldQualifier","onEvent","sourceAttribute","Boolean","Number","log","SUPPORTED_VALUE_TYPES","indexOf","ClientConnector","transmitter","clientDolphin","slackMS","maxBatchSize","commandQueue","currentlySending","pushEnabled","waiting","codec","_codec2","commandBatcher","_commandBatcher2","newBatcher","enabled","newListener","pushListener","newCommand","releaseCommand","command","onFinished","release","doSendNext","enqueuePushCommand","cmdsAndHandlers","batch","callback","commands","map","cah","transmit","response","touchedPMs","touched","_this","handle","handleDeletePresentationModelCommand","handleCreatePresentationModelCommand","handleValueChangedCommand","handleAttributeMetadataChangedCommand","serverCommand","pmId","getClientModelStore","deletePresentationModel","containsPresentationModel","attr","clientAttribute","_this2","match","clientPm","_clientPresentationModel2","pmType","addAttributes","clientSideOnly","add","updatePresentationModelQualifier","findAttributeById","attributeId","setValueFromServer","metadataName","me","signal","_openDolphin","ClientContextFactory","url","config","JSON","stringify","builder","makeDolphin","reset","supportCORS","MAX_SAFE_INTEGER","errorHandler","headersInfo","build","_platformHttpTransmitter2","clientConnector","_classrepo2","beanManager","_beanmanager2","connector","_connector2","controllerManager","_controllermanager2","clientContext","_clientcontext2","ClientDolphin","send","_clientAttribute2","_len","_key","addAttribute","clientModelStore","listPresentationModelIds","listPresentationModels","findAllPresentationModelByType","modelToDelete","getAttributes","updateAttributeQualifier","findAllAttributesByQualifier","targetAttribute","pushCommand","setPushListener","setReleaseCommand","setPushEnabled","listen","_constants","ClientModelStore","presentationModels","presentationModelsPerType","attributesPerId","attributesPerQualifier","modelStoreChangeBus","addAttributeById","addAttributeByQualifier","evt","_commandFactory2","createValueChangedCommand","getClientConnector","findAttributesByFilter","onQualifierChange","createChangeAttributeMetadataCommand","_attribute2","added","addPresentationModelByType","createCreatePresentationModelCommand","registerAttribute","eventType","ADDED_TYPE","clientPresentationModel","removed","removePresentationModelByType","delete","removeAttributeById","removeAttributeByQualifier","REMOVED_TYPE","matches","splice","remove","createPresentationModelDeletedCommand","pmStoreEvent","presentationModelInstanceCount","ClientPresentationModel","dirty","invalidBus","dirtyValueChangeBus","attributeCopy","copy","findAttributeByQualifier","setPresentationModel","handleInvalidate","sourcePresentationModel","getAt","syncWith","ClientContext","_controllerManager","_connector","connectionPromise","isConnected","_promise2","connect","createCreateContextCommand","createController","stopPushListening","destroy","createDestroyContextCommand","_emitterComponent2","_commandConstants","BlindCommandBatcher","folding","batchLength","VALUE_CHANGED_COMMAND_ID","PRESENTATION_MODEL_DELETED_COMMAND_ID","Codec","jsonCommand","ATTRIBUTE_METADATA_CHANGED_COMMAND_ID","ATTRIBUTE_ID","_attributeMetadataChangedCommand2","controllerid","actionName","params","CALL_ACTION_COMMAND_ID","CONTROLLER_ID","PARAMS","_callActionCommand2","CHANGE_ATTRIBUTE_METADATA_COMMAND_ID","_changeAttributeMetadataCommand2","CREATE_CONTEXT_COMMAND_ID","_createContextCommand2","controllerName","CREATE_CONTROLLER_COMMAND_ID","parentControllerId","_createControllerCommand2","CREATE_PRESENTATION_MODEL_COMMAND_ID","PM_ID","PM_TYPE","_createPresentationModelCommand2","PM_ATTRIBUTES","DELETE_PRESENTATION_MODEL_COMMAND_ID","_deletePresentationModelCommand2","DESTROY_CONTEXT_COMMAND_ID","_destroyContextCommand2","controllerId","DESTROY_CONTROLLER_COMMAND_ID","_destroyControllerCommand2","INTERRUPT_LONG_POLL_COMMAND_ID","_interruptLongPollCommand2","_presentationModelDeletedCommand2","START_LONG_POLL_COMMAND_ID","_startLongPollCommand2","_valueChangedCommand2","_encodeAttributeMetadataChangedCommand","_encodeCallActionCommand","_encodeChangeAttributeMetadataCommand","_encodeCreateContextCommand","_encodeCreateControllerCommand","_encodeCreatePresentationModelCommand","_encodeDeletePresentationModelCommand","_encodeDestroyContextCommand","_encodeDestroyControllerCommand","_encodeInterruptLongPollCommand","_encodePresentationModelDeletedCommand","_encodeStartLongPollCommand","_encodeValueChangedCommand","_codecError2","transmitted","JS_STRING_TYPE","parse","_decodeAttributeMetadataChangedCommand","_decodeCallActionCommand","_decodeChangeAttributeMetadataCommand","_decodeCreateContextCommand","_decodeCreateControllerCommand","_decodeCreatePresentationModelCommand","_decodeDeletePresentationModelCommand","_decodeDestroyContextCommand","_decodeDestroyControllerCommand","_decodeInterruptLongPollCommand","_decodePresentationModelDeletedCommand","_decodeStartLongPollCommand","_decodeValueChangedCommand","CodecError","_Error","message","ID","CommandFactory","init","AttributeMetadataChangedCommand","CallActionCommand","ChangeAttributeMetadataCommand","CreateContextCommand","CreateControllerCommand","CreatePresentationModelCommand","DeletePresentationModelCommand","DestroyContextCommand","DestroyControllerCommand","InterruptLongPollCommand","PresentationModelDeletedCommand","StartLongPollCommand","ValueChangedCommand","ACTION_CALL_BEAN","DOLPHIN_LIST_SPLICE","SOURCE_SYSTEM","SOURCE_SYSTEM_SERVER","Connector","highlanderPMResolver","highlanderPMPromise","onModelStoreChange","sourceSystem","onModelAdded","onModelRemoved","startPushListening","createStartLongPollCommand","createInterruptLongPollCommand","registerClass","spliceListEntry","load","unregisterClass","unload","SOURCE_SYSTEM_CLIENT","ERROR_CODE","ControllerManager","controllers","_set2","_createController","controller","getHighlanderPM","highlanderPM","createCreateControllerCommand","mapDolphinToBean","_controllerproxy2","pm","actionParams","mapParamToDolphin","createCallActionCommand","createDestroyControllerCommand","getId","controllersCopy","promises","_set","ControllerProxy","manager","destroyed","onDestroyedHandlers","invokeAction","destroyController","DolphinBuilder","reset_","slackMS_","maxBatchSize_","supportCORS_","_url","url_","_reset","_slackMS","_maxBatchSize","_supportCORS","_errorHandler","errorHandler_","_headersInfo","headersInfo_","_clientDolphin2","_httpTransmitter2","_noTransmitter2","setClientConnector","_clientConnector2","setClientModelStore","_clientModelStore2","DolphinRemotingError","detail","DolphinSessionError","_Error2","HttpResponseError","_Error3","HttpNetworkError","_Error4","EventBus","eventHandlers","_codec","HttpTransmitter","charset","HttpCodes","http","XMLHttpRequest","sig","withCredentials","invalidate","onDone","onerror","handleError","onreadystatechange","readyState","finished","status","success","responseText","trim","responseCommands","decode","setHeaders","overrideMimeType","encode","httpReq","setRequestHeader","errorEvent","httpStatus","NoTransmitter","_dolphinBuilder","_dolphinBuilder2","_errors","CLIENT_ID_HTTP_HEADER_NAME","DOLPHIN_PLATFORM_PREFIX","PlatformHttpTransmitter","connectionConfig","connection","maxRetry","timeout","failed_attempt","errorHandlers","_remotingErrorHandler2","onError","errorContent","_handleError","currentClientId","getResponseHeader","clientId","_send","catch","_this3","RemotingErrorHandler","_checkMethodName","checkMethod","checkParam","parameterName","dolphinClient","angular","provider","$cfg","configure","cfg","$get","factory","clientContextFactory","$dolphinConfig","DOLPHIN_URL","$rootScope","$timeout","vanillaClientContext","$log","waitingForGlobalDolphinApply","applyInAngular","debug","$apply","dolphinBinding","injectArray","baseArray","startIndex","insertArray","deepEqual","array1","array2","onAdded","onBeanAddedHandler","onRemoved","onBeanRemovedHandler","onBeanUpdateHandler","onArrayUpdateHandler","watchAttribute","$watch","newProperty","oldElements","$window","scope","controllerProxy","$on","disconnect","onConnect","onbeforeunload"],"mappings":"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","file":"dolphin-platform-angular.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/_core').Map;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nmodule.exports = require('../modules/_core').Set;","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};","var isObject = require('./_is-object')\n  , isArray  = require('./_is-array')\n  , SPECIES  = require('./_wks')('species');\n\nmodule.exports = function(original){\n  var C;\n  if(isArray(original)){\n    C = original.constructor;\n    // cross-realm fallback\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n    if(isObject(C)){\n      C = C[SPECIES];\n      if(C === null)C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar dP          = require('./_object-dp').f\n  , create      = require('./_object-create')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)dP(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};","'use strict';\nvar global         = require('./_global')\n  , $export        = require('./_export')\n  , meta           = require('./_meta')\n  , fails          = require('./_fails')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , forOf          = require('./_for-of')\n  , anInstance     = require('./_an-instance')\n  , isObject       = require('./_is-object')\n  , setToStringTag = require('./_set-to-string-tag')\n  , dP             = require('./_object-dp').f\n  , each           = require('./_array-methods')(0)\n  , DESCRIPTORS    = require('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)dP(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method')\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","module.exports = require('./_global').document && document.documentElement;","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","module.exports = true;","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var hide = require('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};","module.exports = require('./_hide');","'use strict';\nvar global      = require('./_global')\n  , core        = require('./_core')\n  , dP          = require('./_object-dp')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: require('./_collection-to-json')('Set')});","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\nexport default class Attribute {\n}\n\nAttribute.QUALIFIER_PROPERTY = \"qualifier\";\nAttribute.VALUE = \"value\";\n","import  Map from '../bower_components/core.js/library/fn/map';\nimport {exists, checkMethod, checkParam} from './utils';\n\nexport default class BeanManager {\n    constructor(classRepository) {\n        checkMethod('BeanManager(classRepository)');\n        checkParam(classRepository, 'classRepository');\n\n        this.classRepository = classRepository;\n        this.addedHandlers = new Map();\n        this.removedHandlers = new Map();\n        this.updatedHandlers = new Map();\n        this.arrayUpdatedHandlers = new Map();\n        this.allAddedHandlers = [];\n        this.allRemovedHandlers = [];\n        this.allUpdatedHandlers = [];\n        this.allArrayUpdatedHandlers = [];\n\n        let self = this;\n        this.classRepository.onBeanAdded((type, bean) => {\n            let handlerList = self.addedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach((handler) => {\n                    try {\n                        handler(bean);\n                    } catch (e) {\n                        console.warn('An exception occurred while calling an onBeanAdded-handler for type', type, e);\n                    }\n                });\n            }\n            self.allAddedHandlers.forEach((handler) => {\n                try {\n                    handler(bean);\n                } catch (e) {\n                    console.warn('An exception occurred while calling a general onBeanAdded-handler', e);\n                }\n            });\n        });\n        this.classRepository.onBeanRemoved((type, bean) => {\n            let handlerList = self.removedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach((handler) => {\n                    try {\n                        handler(bean);\n                    } catch (e) {\n                        console.warn('An exception occurred while calling an onBeanRemoved-handler for type', type, e);\n                    }\n                });\n            }\n            self.allRemovedHandlers.forEach((handler) => {\n                try {\n                    handler(bean);\n                } catch (e) {\n                    console.warn('An exception occurred while calling a general onBeanRemoved-handler', e);\n                }\n            });\n        });\n        this.classRepository.onBeanUpdate((type, bean, propertyName, newValue, oldValue) => {\n            let handlerList = self.updatedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach((handler) => {\n                    try {\n                        handler(bean, propertyName, newValue, oldValue);\n                    } catch (e) {\n                        console.warn('An exception occurred while calling an onBeanUpdate-handler for type', type, e);\n                    }\n                });\n            }\n            self.allUpdatedHandlers.forEach((handler) => {\n                try {\n                    handler(bean, propertyName, newValue, oldValue);\n                } catch (e) {\n                    console.warn('An exception occurred while calling a general onBeanUpdate-handler', e);\n                }\n            });\n        });\n        this.classRepository.onArrayUpdate((type, bean, propertyName, index, count, newElements) => {\n            let handlerList = self.arrayUpdatedHandlers.get(type);\n            if (exists(handlerList)) {\n                handlerList.forEach((handler) => {\n                    try {\n                        handler(bean, propertyName, index, count, newElements);\n                    } catch (e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler for type', type, e);\n                    }\n                });\n            }\n            self.allArrayUpdatedHandlers.forEach((handler) => {\n                try {\n                    handler(bean, propertyName, index, count, newElements);\n                } catch (e) {\n                    console.warn('An exception occurred while calling a general onArrayUpdate-handler', e);\n                }\n            });\n        });\n\n\n    }\n\n\n    notifyBeanChange(bean, propertyName, newValue) {\n        checkMethod('BeanManager.notifyBeanChange(bean, propertyName, newValue)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n\n        return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n    }\n\n\n    notifyArrayChange(bean, propertyName, index, count, removedElements) {\n        checkMethod('BeanManager.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n        checkParam(index, 'index');\n        checkParam(count, 'count');\n        checkParam(removedElements, 'removedElements');\n\n        this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n    }\n\n\n    isManaged(bean) {\n        checkMethod('BeanManager.isManaged(bean)');\n        checkParam(bean, 'bean');\n\n        // TODO: Implement dolphin.isManaged() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    create(type) {\n        checkMethod('BeanManager.create(type)');\n        checkParam(type, 'type');\n\n        // TODO: Implement dolphin.create() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    add(type, bean) {\n        checkMethod('BeanManager.add(type, bean)');\n        checkParam(type, 'type');\n        checkParam(bean, 'bean');\n\n        // TODO: Implement dolphin.add() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    addAll(type, collection) {\n        checkMethod('BeanManager.addAll(type, collection)');\n        checkParam(type, 'type');\n        checkParam(collection, 'collection');\n\n        // TODO: Implement dolphin.addAll() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    remove(bean) {\n        checkMethod('BeanManager.remove(bean)');\n        checkParam(bean, 'bean');\n\n        // TODO: Implement dolphin.remove() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    removeAll(collection) {\n        checkMethod('BeanManager.removeAll(collection)');\n        checkParam(collection, 'collection');\n\n        // TODO: Implement dolphin.removeAll() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    removeIf(predicate) {\n        checkMethod('BeanManager.removeIf(predicate)');\n        checkParam(predicate, 'predicate');\n\n        // TODO: Implement dolphin.removeIf() [DP-7]\n        throw new Error(\"Not implemented yet\");\n    }\n\n\n    onAdded(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onAdded(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: function () {\n                    self.allAddedHandlers = self.allAddedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onAdded(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            var handlerList = self.addedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            self.addedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    var handlerList = self.addedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.addedHandlers.set(type, handlerList.filter(function (value) {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n\n\n    onRemoved(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onRemoved(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: () => {\n                    self.allRemovedHandlers = self.allRemovedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onRemoved(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            var handlerList = self.removedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            self.removedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    var handlerList = self.removedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.removedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n\n\n    onBeanUpdate(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onBeanUpdate(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: function () {\n                    self.allUpdatedHandlers = self.allUpdatedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onBeanUpdate(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            var handlerList = self.updatedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    var handlerList = self.updatedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.updatedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n\n    onArrayUpdate(type, eventHandler) {\n        let self = this;\n        if (!exists(eventHandler)) {\n            eventHandler = type;\n            checkMethod('BeanManager.onArrayUpdate(eventHandler)');\n            checkParam(eventHandler, 'eventHandler');\n\n            self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n            return {\n                unsubscribe: () => {\n                    self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter((value) => {\n                        return value !== eventHandler;\n                    });\n                }\n            };\n        } else {\n            checkMethod('BeanManager.onArrayUpdate(type, eventHandler)');\n            checkParam(type, 'type');\n            checkParam(eventHandler, 'eventHandler');\n\n            var handlerList = self.arrayUpdatedHandlers.get(type);\n            if (!exists(handlerList)) {\n                handlerList = [];\n            }\n            self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n            return {\n                unsubscribe: () => {\n                    var handlerList = self.arrayUpdatedHandlers.get(type);\n                    if (exists(handlerList)) {\n                        self.arrayUpdatedHandlers.set(type, handlerList.filter((value) => {\n                            return value !== eventHandler;\n                        }));\n                    }\n                }\n            };\n        }\n    }\n}\n","import  Map from '../bower_components/core.js/library/fn/map';\nimport * as consts from './constants';\nimport {exists, checkMethod, checkParam} from './utils';\n\nvar blocked = null;\n\nexport default class ClassRepository {\n\n    constructor(dolphin) {\n        checkMethod('ClassRepository(dolphin)');\n        checkParam(dolphin, 'dolphin');\n\n        this.dolphin = dolphin;\n        this.classes = new Map();\n        this.beanFromDolphin = new Map();\n        this.beanToDolphin = new Map();\n        this.classInfos = new Map();\n        this.beanAddedHandlers = [];\n        this.beanRemovedHandlers = [];\n        this.propertyUpdateHandlers = [];\n        this.arrayUpdateHandlers = [];\n    }\n\n    fixType(type, value) {\n        switch (type) {\n            case consts.BYTE:\n            case consts.SHORT:\n            case consts.INT:\n            case consts.LONG:\n                return parseInt(value);\n            case consts.FLOAT:\n            case consts.DOUBLE:\n                return parseFloat(value);\n            case consts.BOOLEAN:\n                return 'true' === String(value).toLowerCase();\n            case consts.STRING:\n            case consts.ENUM:\n                return String(value);\n            default:\n                return value;\n        }\n    }\n\n    fromDolphin(classRepository, type, value) {\n        if (!exists(value)) {\n            return null;\n        }\n        switch (type) {\n            case consts.DOLPHIN_BEAN:\n                return classRepository.beanFromDolphin.get(String(value));\n            case consts.DATE:\n                return new Date(String(value));\n            case consts.CALENDAR:\n                return new Date(String(value));\n            case consts.LOCAL_DATE_FIELD_TYPE:\n                return new Date(String(value));\n            case consts.LOCAL_DATE_TIME_FIELD_TYPE:\n                return new Date(String(value));\n            case consts.ZONED_DATE_TIME_FIELD_TYPE:\n                return new Date(String(value));\n            default:\n                return this.fixType(type, value);\n        }\n    }\n\n    toDolphin(classRepository, type, value) {\n        if (!exists(value)) {\n            return null;\n        }\n        switch (type) {\n            case consts.DOLPHIN_BEAN:\n                return classRepository.beanToDolphin.get(value);\n            case consts.DATE:\n                return value instanceof Date ? value.toISOString() : value;\n            case consts.CALENDAR:\n                return value instanceof Date ? value.toISOString() : value;\n            case consts.LOCAL_DATE_FIELD_TYPE:\n                return value instanceof Date ? value.toISOString() : value;\n            case consts.LOCAL_DATE_TIME_FIELD_TYPE:\n                return value instanceof Date ? value.toISOString() : value;\n            case consts.ZONED_DATE_TIME_FIELD_TYPE:\n                return value instanceof Date ? value.toISOString() : value;\n            default:\n                return this.fixType(type, value);\n        }\n    }\n\n    sendListSplice(classRepository, modelId, propertyName, from, to, newElements) {\n        let dolphin = classRepository.dolphin;\n        let model = dolphin.findPresentationModelById(modelId);\n        let self = this;\n        if (exists(model)) {\n            let classInfo = classRepository.classes.get(model.presentationModelType);\n            let type = classInfo[propertyName];\n            if (exists(type)) {\n\n                let attributes = [\n                    dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n                    dolphin.attribute('source', null, modelId),\n                    dolphin.attribute('attribute', null, propertyName),\n                    dolphin.attribute('from', null, from),\n                    dolphin.attribute('to', null, to),\n                    dolphin.attribute('count', null, newElements.length)\n                ];\n                newElements.forEach(function (element, index) {\n                    attributes.push(dolphin.attribute(index.toString(), null, self.toDolphin(classRepository, type, element)));\n                });\n                dolphin.presentationModel.apply(dolphin, [null, '@DP:LS@'].concat(attributes));\n            }\n        }\n    }\n\n    validateList(classRepository, type, bean, propertyName) {\n        let list = bean[propertyName];\n        if (!exists(list)) {\n            classRepository.propertyUpdateHandlers.forEach(function (handler) {\n                try {\n                    handler(type, bean, propertyName, [], undefined);\n                } catch (e) {\n                    console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n                }\n            });\n        }\n    }\n\n    block(bean, propertyName) {\n        if (exists(blocked)) {\n            throw new Error('Trying to create a block while another block exists');\n        }\n        blocked = {\n            bean: bean,\n            propertyName: propertyName\n        };\n    }\n\n    isBlocked(bean, propertyName) {\n        return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n    }\n\n    unblock() {\n        blocked = null;\n    }\n\n    notifyBeanChange(bean, propertyName, newValue) {\n        checkMethod('ClassRepository.notifyBeanChange(bean, propertyName, newValue)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n\n        let modelId = this.beanToDolphin.get(bean);\n        if (exists(modelId)) {\n            let model = this.dolphin.findPresentationModelById(modelId);\n            if (exists(model)) {\n                let classInfo = this.classes.get(model.presentationModelType);\n                let type = classInfo[propertyName];\n                let attribute = model.findAttributeByPropertyName(propertyName);\n                if (exists(type) && exists(attribute)) {\n                    let oldValue = attribute.getValue();\n                    attribute.setValue(this.toDolphin(this, type, newValue));\n                    return this.fromDolphin(this, type, oldValue);\n                }\n            }\n        }\n    }\n\n    notifyArrayChange(bean, propertyName, index, count, removedElements) {\n        checkMethod('ClassRepository.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n        checkParam(bean, 'bean');\n        checkParam(propertyName, 'propertyName');\n        checkParam(index, 'index');\n        checkParam(count, 'count');\n        checkParam(removedElements, 'removedElements');\n\n        if (this.isBlocked(bean, propertyName)) {\n            return;\n        }\n        let modelId = this.beanToDolphin.get(bean);\n        let array = bean[propertyName];\n        if (exists(modelId) && exists(array)) {\n            let removedElementsCount = Array.isArray(removedElements) ? removedElements.length : 0;\n            this.sendListSplice(this, modelId, propertyName, index, index + removedElementsCount, array.slice(index, index + count));\n        }\n    }\n\n    onBeanAdded(handler) {\n        checkMethod('ClassRepository.onBeanAdded(handler)');\n        checkParam(handler, 'handler');\n        this.beanAddedHandlers.push(handler);\n    }\n\n    onBeanRemoved(handler) {\n        checkMethod('ClassRepository.onBeanRemoved(handler)');\n        checkParam(handler, 'handler');\n        this.beanRemovedHandlers.push(handler);\n    }\n\n    onBeanUpdate(handler) {\n        checkMethod('ClassRepository.onBeanUpdate(handler)');\n        checkParam(handler, 'handler');\n        this.propertyUpdateHandlers.push(handler);\n    }\n\n    onArrayUpdate(handler) {\n        checkMethod('ClassRepository.onArrayUpdate(handler)');\n        checkParam(handler, 'handler');\n        this.arrayUpdateHandlers.push(handler);\n    }\n\n    registerClass(model) {\n        checkMethod('ClassRepository.registerClass(model)');\n        checkParam(model, 'model');\n\n        if (this.classes.has(model.id)) {\n            return;\n        }\n\n        let classInfo = {};\n        model.attributes.filter(function (attribute) {\n            return attribute.propertyName.search(/^@/) < 0;\n        }).forEach(function (attribute) {\n            classInfo[attribute.propertyName] = attribute.value;\n        });\n        this.classes.set(model.id, classInfo);\n    }\n\n    unregisterClass(model) {\n        checkMethod('ClassRepository.unregisterClass(model)');\n        checkParam(model, 'model');\n        this.classes['delete'](model.id);\n    }\n\n    load(model) {\n        checkMethod('ClassRepository.load(model)');\n        checkParam(model, 'model');\n\n        var self = this;\n        var classInfo = this.classes.get(model.presentationModelType);\n        var bean = {};\n        model.attributes.filter(function (attribute) {\n            return (attribute.propertyName.search(/^@/) < 0);\n        }).forEach(function (attribute) {\n            bean[attribute.propertyName] = null;\n            attribute.onValueChange(function (event) {\n                if (event.oldValue !== event.newValue) {\n                    let oldValue = self.fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                    let newValue = self.fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                    self.propertyUpdateHandlers.forEach((handler) => {\n                        try {\n                            handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                        } catch (e) {\n                            console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n                        }\n                    });\n                }\n            });\n        });\n        this.beanFromDolphin.set(model.id, bean);\n        this.beanToDolphin.set(bean, model.id);\n        this.classInfos.set(model.id, classInfo);\n        this.beanAddedHandlers.forEach((handler) => {\n            try {\n                handler(model.presentationModelType, bean);\n            } catch (e) {\n                console.warn('An exception occurred while calling an onBeanAdded-handler', e);\n            }\n        });\n        return bean;\n    }\n\n    unload(model) {\n        checkMethod('ClassRepository.unload(model)');\n        checkParam(model, 'model');\n\n        let bean = this.beanFromDolphin.get(model.id);\n        this.beanFromDolphin['delete'](model.id);\n        this.beanToDolphin['delete'](bean);\n        this.classInfos['delete'](model.id);\n        if (exists(bean)) {\n            this.beanRemovedHandlers.forEach((handler) => {\n                try {\n                    handler(model.presentationModelType, bean);\n                } catch (e) {\n                    console.warn('An exception occurred while calling an onBeanRemoved-handler', e);\n                }\n            });\n        }\n        return bean;\n    }\n\n    spliceListEntry(model) {\n        checkMethod('ClassRepository.spliceListEntry(model)');\n        checkParam(model, 'model');\n\n        let source = model.findAttributeByPropertyName('source');\n        let attribute = model.findAttributeByPropertyName('attribute');\n        let from = model.findAttributeByPropertyName('from');\n        let to = model.findAttributeByPropertyName('to');\n        let count = model.findAttributeByPropertyName('count');\n\n        if (exists(source) && exists(attribute) && exists(from) && exists(to) && exists(count)) {\n            var classInfo = this.classInfos.get(source.value);\n            var bean = this.beanFromDolphin.get(source.value);\n            if (exists(bean) && exists(classInfo)) {\n                let type = model.presentationModelType;\n                //var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n                this.validateList(this, type, bean, attribute.value);\n                var newElements = [],\n                    element = null;\n                for (var i = 0; i < count.value; i++) {\n                    element = model.findAttributeByPropertyName(i.toString());\n                    if (!exists(element)) {\n                        throw new Error(\"Invalid list modification update received\");\n                    }\n                    newElements.push(this.fromDolphin(this, classInfo[attribute.value], element.value));\n                }\n                try {\n                    this.block(bean, attribute.value);\n                    this.arrayUpdateHandlers.forEach((handler) => {\n                        try {\n                            handler(type, bean, attribute.value, from.value, to.value - from.value, newElements);\n                        } catch (e) {\n                            console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                        }\n                    });\n                } finally {\n                    this.unblock();\n                }\n            } else {\n                throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received\");\n        }\n    }\n\n    mapParamToDolphin(param) {\n        if (!exists(param)) {\n            return param;\n        }\n        let type = typeof param;\n        if (type === 'object') {\n            if (param instanceof Date) {\n                return param.toISOString();\n            } else {\n                let value = this.beanToDolphin.get(param);\n                if (exists(value)) {\n                    return value;\n                }\n                throw new TypeError(\"Only managed Dolphin Beans can be used\");\n            }\n        }\n        if (type === 'string' || type === 'number' || type === 'boolean') {\n            return param;\n        }\n        throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n    }\n\n    mapDolphinToBean(value) {\n        return this.fromDolphin(this, consts.DOLPHIN_BEAN, value);\n    }\n}\n","import EventBus from './eventBus';\n\nexport default class ClientAttribute {\n    constructor(propertyName, qualifier, value) {\n        this.propertyName = propertyName;\n        this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n        this.valueChangeBus = new EventBus();\n        this.qualifierChangeBus = new EventBus();\n        this.setValue(value);\n        this.setQualifier(qualifier);\n    }\n\n    copy() {\n        var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue());\n        return result;\n    }\n\n    setPresentationModel(presentationModel) {\n        if (this.presentationModel) {\n            throw new Error(\"You can not set a presentation model for an attribute that is already bound.\");\n        }\n        this.presentationModel = presentationModel;\n    }\n\n    getPresentationModel() {\n        return this.presentationModel;\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    setValueFromServer(newValue) {\n        var verifiedValue = ClientAttribute.checkValue(newValue);\n        if (this.value == verifiedValue)\n            return;\n        var oldValue = this.value;\n        this.value = verifiedValue;\n        this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue, 'sendToServer': false });\n    }\n\n    setValue(newValue) {\n        var verifiedValue = ClientAttribute.checkValue(newValue);\n        if (this.value == verifiedValue)\n            return;\n        var oldValue = this.value;\n        this.value = verifiedValue;\n        this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue, 'sendToServer': true });\n    }\n\n    setQualifier(newQualifier) {\n        if (this.qualifier == newQualifier)\n            return;\n        var oldQualifier = this.qualifier;\n        this.qualifier = newQualifier;\n        this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        this.valueChangeBus.trigger({ \"oldValue\": this.value, \"newValue\": this.value, 'sendToServer': false });\n    }\n\n    getQualifier() {\n        return this.qualifier;\n    }\n\n    onValueChange(eventHandler) {\n        this.valueChangeBus.onEvent(eventHandler);\n        eventHandler({ \"oldValue\": this.value, \"newValue\": this.value, 'sendToServer': false });\n    }\n\n    onQualifierChange(eventHandler) {\n        this.qualifierChangeBus.onEvent(eventHandler);\n    }\n\n    syncWith(sourceAttribute) {\n        if (sourceAttribute) {\n            this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n            this.setValue(sourceAttribute.value);\n        }\n    }\n\n    static checkValue(value) {\n        if (value == null || value == undefined) {\n            return null;\n        }\n        var result = value;\n        if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n            result = value.valueOf();\n        }\n        if (result instanceof ClientAttribute) {\n            console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n            result = this.checkValue(value.value);\n        }\n        var ok = false;\n        if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n            ok = true;\n        }\n        if (!ok) {\n            throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n        }\n        return result;\n    }\n\n}\n\nClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\nClientAttribute.clientAttributeInstanceCount = 0;\n","import BlindCommandBatcher from './commandBatcher';\nimport Codec from './commands/codec';\nimport ClientPresentationModel from './clientPresentationModel'\n\nexport default class ClientConnector {\n\n    constructor(transmitter, clientDolphin, slackMS = 0, maxBatchSize = 50) {\n        this.commandQueue = [];\n        this.currentlySending = false;\n        this.pushEnabled = false;\n        this.waiting = false;\n        this.transmitter = transmitter;\n        this.clientDolphin = clientDolphin;\n        this.slackMS = slackMS;\n        this.codec = new Codec();\n        this.commandBatcher = new BlindCommandBatcher(true, maxBatchSize);\n    }\n\n    setCommandBatcher(newBatcher) {\n        this.commandBatcher = newBatcher;\n    }\n\n    setPushEnabled(enabled) {\n        this.pushEnabled = enabled;\n    }\n\n    setPushListener(newListener) {\n        this.pushListener = newListener;\n    }\n\n    setReleaseCommand(newCommand) {\n        this.releaseCommand = newCommand;\n    }\n\n    send(command, onFinished) {\n        this.commandQueue.push({ command: command, handler: onFinished });\n        if (this.currentlySending) {\n            this.release(); // there is not point in releasing if we do not send atm\n            return;\n        }\n        this.doSendNext();\n    }\n\n    doSendNext() {\n        if (this.commandQueue.length < 1) {\n            if (this.pushEnabled) {\n                this.enqueuePushCommand();\n            }\n            else {\n                this.currentlySending = false;\n                return;\n            }\n        }\n        this.currentlySending = true;\n        var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n\n        if(cmdsAndHandlers.length > 0) {\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(cah => { return cah.command; });\n            this.transmitter.transmit(commands, (response) => {\n                var touchedPMs = [];\n                response.forEach((command) => {\n                    var touched = this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                setTimeout(() => this.doSendNext(), this.slackMS);\n            });\n        } else {\n            setTimeout(() => this.doSendNext(), this.slackMS);\n        }\n    }\n\n    handle(command) {\n        if (command.id == \"DeletePresentationModel\") {\n            return this.handleDeletePresentationModelCommand(command);\n        }\n        else if (command.id == \"CreatePresentationModel\") {\n            return this.handleCreatePresentationModelCommand(command);\n        }\n        else if (command.id == \"ValueChanged\") {\n            return this.handleValueChangedCommand(command);\n        }\n        else if (command.id == \"AttributeMetadataChanged\") {\n            return this.handleAttributeMetadataChangedCommand(command);\n        }\n        else {\n            console.log(\"Cannot handle, unknown command \" + command);\n        }\n        return null;\n    }\n\n    handleDeletePresentationModelCommand(serverCommand) {\n        var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n        if (!model)\n            return null;\n        this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n        return model;\n    }\n\n    handleCreatePresentationModelCommand(serverCommand) {\n        if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n            throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n        }\n        var attributes = [];\n        serverCommand.attributes.forEach((attr) => {\n            var clientAttribute = this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value);\n            if (attr.id && attr.id.match(\".*S$\")) {\n                clientAttribute.id = attr.id;\n            }\n            attributes.push(clientAttribute);\n        });\n        var clientPm = new ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n        clientPm.addAttributes(attributes);\n        if (serverCommand.clientSideOnly) {\n            clientPm.clientSideOnly = true;\n        }\n        this.clientDolphin.getClientModelStore().add(clientPm, false);\n        this.clientDolphin.updatePresentationModelQualifier(clientPm);\n        return clientPm;\n    }\n\n    handleValueChangedCommand(serverCommand) {\n        var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n        if (!clientAttribute) {\n            console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update to new value \" + serverCommand.newValue);\n            return null;\n        }\n        if (clientAttribute.getValue() == serverCommand.newValue) {\n            //console.log(\"nothing to do. new value == old value\");\n            return null;\n        }\n        clientAttribute.setValueFromServer(serverCommand.newValue);\n        return null;\n    }\n\n    handleAttributeMetadataChangedCommand(serverCommand) {\n        var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n        if (!clientAttribute)\n            return null;\n        clientAttribute[serverCommand.metadataName] = serverCommand.value;\n        return null;\n    }\n\n    listen() {\n        if (!this.pushEnabled)\n            return;\n        if (this.waiting)\n            return;\n        // todo: how to issue a warning if no pushListener is set?\n        if (!this.currentlySending) {\n            this.doSendNext();\n        }\n    }\n\n    enqueuePushCommand() {\n        var me = this;\n        this.waiting = true;\n        this.commandQueue.push({\n            command: this.pushListener,\n            handler: {\n                onFinished: function () { me.waiting = false; },\n                onFinishedData: null\n            }\n        });\n    }\n\n    release() {\n        if (!this.waiting)\n            return;\n        this.waiting = false;\n        // todo: how to issue a warning if no releaseCommand is set?\n        this.transmitter.signal(this.releaseCommand);\n    }\n}","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {makeDolphin} from './openDolphin.js';\nimport {exists, checkMethod, checkParam} from './utils';\nimport Connector from './connector';\nimport BeanManager from './beanmanager';\nimport ClassRepository from './classrepo';\nimport ControllerManager from './controllermanager';\nimport ClientContext from './clientcontext';\nimport PlatformHttpTransmitter from './platformHttpTransmitter';\n\nexport default class ClientContextFactory {\n\n    create(url, config){\n        checkMethod('connect(url, config)');\n        checkParam(url, 'url');\n        console.log('Creating client context '+ url +'    '+ JSON.stringify(config));\n\n        let builder = makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true).maxBatchSize(Number.MAX_SAFE_INTEGER);\n        if (exists(config)) {\n            if (exists(config.errorHandler)) {\n                builder.errorHandler(config.errorHandler);\n            }\n            if (exists(config.headersInfo) && Object.keys(config.headersInfo).length > 0) {\n                builder.headersInfo(config.headersInfo);\n            }\n        }\n\n        var dolphin = builder.build();\n\n        var transmitter = new PlatformHttpTransmitter(url, config);\n        transmitter.on('error', function (error) {\n            clientContext.emit('error', error);\n        });\n        dolphin.clientConnector.transmitter = transmitter;\n\n        var classRepository = new ClassRepository(dolphin);\n        var beanManager = new BeanManager(classRepository);\n        var connector = new Connector(url, dolphin, classRepository, config);\n        var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n        var clientContext = new ClientContext(dolphin, beanManager, controllerManager, connector);\n        return clientContext;\n    }\n}\n\nexports.ClientContextFactory = ClientContextFactory;","import ClientAttribute from './clientAttribute'\nimport ClientPresentationModel from './clientPresentationModel'\n\nexport default class ClientDolphin {\n\n    constructor() {\n    }\n\n    setClientConnector(clientConnector) {\n        this.clientConnector = clientConnector;\n    }\n\n    getClientConnector() {\n        return this.clientConnector;\n    }\n\n    send(command, onFinished) {\n        this.clientConnector.send(command, onFinished);\n    }\n\n    attribute(propertyName, qualifier, value) {\n        return new ClientAttribute(propertyName, qualifier, value);\n    }\n\n    presentationModel(id, type, ...attributes) {\n        var model = new ClientPresentationModel(id, type);\n        if (attributes && attributes.length > 0) {\n            attributes.forEach((attribute) => {\n                model.addAttribute(attribute);\n            });\n        }\n        this.getClientModelStore().add(model, true);\n        return model;\n    }\n\n    setClientModelStore(clientModelStore) {\n        this.clientModelStore = clientModelStore;\n    }\n\n    getClientModelStore() {\n        return this.clientModelStore;\n    }\n\n    listPresentationModelIds() {\n        return this.getClientModelStore().listPresentationModelIds();\n    }\n\n    listPresentationModels() {\n        return this.getClientModelStore().listPresentationModels();\n    }\n\n    findAllPresentationModelByType(presentationModelType) {\n        return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n    }\n\n    getAt(id) {\n        return this.findPresentationModelById(id);\n    }\n\n    findPresentationModelById(id) {\n        return this.getClientModelStore().findPresentationModelById(id);\n    }\n\n    deletePresentationModel(modelToDelete) {\n        this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n    }\n\n    updatePresentationModelQualifier(presentationModel) {\n        presentationModel.getAttributes().forEach(sourceAttribute => {\n            this.updateAttributeQualifier(sourceAttribute);\n        });\n    }\n\n    updateAttributeQualifier(sourceAttribute) {\n        if (!sourceAttribute.getQualifier())\n            return;\n        var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n        attributes.forEach(targetAttribute => {\n            targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n        });\n    }\n\n    startPushListening(pushCommand, releaseCommand) {\n        this.clientConnector.setPushListener(pushCommand);\n        this.clientConnector.setReleaseCommand(releaseCommand);\n        this.clientConnector.setPushEnabled(true);\n\n        setTimeout(() => {\n            this.clientConnector.listen();\n        }, 0);\n    }\n\n    stopPushListening() {\n        this.clientConnector.setPushEnabled(false);\n    }\n}","import Attribute from './attribute'\nimport EventBus from './eventBus'\nimport CommandFactory from './commands/commandFactory';\nimport {ADDED_TYPE, REMOVED_TYPE} from './constants'\n\nexport default class ClientModelStore {\n\n    constructor(clientDolphin) {\n        this.clientDolphin = clientDolphin;\n        this.presentationModels = new Map();\n        this.presentationModelsPerType = new Map();\n        this.attributesPerId = new Map();\n        this.attributesPerQualifier = new Map();\n        this.modelStoreChangeBus = new EventBus();\n    }\n\n    getClientDolphin() {\n        return this.clientDolphin;\n    }\n\n    registerAttribute(attribute) {\n        this.addAttributeById(attribute);\n        if (attribute.getQualifier()) {\n            this.addAttributeByQualifier(attribute);\n        }\n        // whenever an attribute changes its value, the server needs to be notified\n        // and all other attributes with the same qualifier are given the same value\n        attribute.onValueChange((evt) => {\n            if(evt.newValue != evt.oldValue && evt.sendToServer == true) {\n                const command = CommandFactory.createValueChangedCommand(attribute.id, evt.newValue);\n                this.clientDolphin.getClientConnector().send(command, null);\n            }\n\n            if (attribute.getQualifier()) {\n                var attrs = this.findAttributesByFilter((attr) => {\n                    return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                });\n                attrs.forEach((attr) => {\n                    attr.setValue(attribute.getValue());\n                });\n            }\n\n        });\n        attribute.onQualifierChange((evt) => {\n            this.clientDolphin.getClientConnector().send(CommandFactory.createChangeAttributeMetadataCommand(attribute.id, Attribute.QUALIFIER_PROPERTY, evt.newValue), null);\n        });\n    }\n\n    add(model, sendToServer = true) {\n        if (!model) {\n            return false;\n        }\n        if (this.presentationModels.has(model.id)) {\n            console.log(\"There already is a PM with id \" + model.id);\n        }\n        var added = false;\n        if (!this.presentationModels.has(model.id)) {\n            this.presentationModels.set(model.id, model);\n            this.addPresentationModelByType(model);\n\n            if(sendToServer) {\n                var connector = this.clientDolphin.getClientConnector();\n                connector.send(CommandFactory.createCreatePresentationModelCommand(model), null);\n            }\n\n            model.getAttributes().forEach(attribute => {\n                this.registerAttribute(attribute);\n            });\n            this.modelStoreChangeBus.trigger({ 'eventType': ADDED_TYPE, 'clientPresentationModel': model });\n            added = true;\n        }\n        return added;\n    }\n\n    remove(model) {\n        if (!model) {\n            return false;\n        }\n        var removed = false;\n        if (this.presentationModels.has(model.id)) {\n            this.removePresentationModelByType(model);\n            this.presentationModels.delete(model.id);\n            model.getAttributes().forEach((attribute) => {\n                this.removeAttributeById(attribute);\n                if (attribute.getQualifier()) {\n                    this.removeAttributeByQualifier(attribute);\n                }\n            });\n            this.modelStoreChangeBus.trigger({ 'eventType': REMOVED_TYPE, 'clientPresentationModel': model });\n            removed = true;\n        }\n        return removed;\n    }\n\n    findAttributesByFilter(filter) {\n        var matches = [];\n        this.presentationModels.forEach((model) => {\n            model.getAttributes().forEach((attr) => {\n                if (filter(attr)) {\n                    matches.push(attr);\n                }\n            });\n        });\n        return matches;\n    }\n\n    addPresentationModelByType(model) {\n        if (!model) {\n            return;\n        }\n        var type = model.presentationModelType;\n        if (!type) {\n            return;\n        }\n        var presentationModels = this.presentationModelsPerType.get(type);\n        if (!presentationModels) {\n            presentationModels = [];\n            this.presentationModelsPerType.set(type, presentationModels);\n        }\n        if (!(presentationModels.indexOf(model) > -1)) {\n            presentationModels.push(model);\n        }\n    }\n\n    removePresentationModelByType(model) {\n        if (!model || !(model.presentationModelType)) {\n            return;\n        }\n        var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n        if (!presentationModels) {\n            return;\n        }\n        if (presentationModels.length > -1) {\n            presentationModels.splice(presentationModels.indexOf(model), 1);\n        }\n        if (presentationModels.length === 0) {\n            this.presentationModelsPerType.delete(model.presentationModelType);\n        }\n    }\n\n    listPresentationModelIds() {\n        var result = [];\n        var iter = this.presentationModels.keys();\n        var next = iter.next();\n        while (!next.done) {\n            result.push(next.value);\n            next = iter.next();\n        }\n        return result;\n    }\n\n    listPresentationModels() {\n        var result = [];\n        var iter = this.presentationModels.values();\n        var next = iter.next();\n        while (!next.done) {\n            result.push(next.value);\n            next = iter.next();\n        }\n        return result;\n    }\n\n    findPresentationModelById(id) {\n        return this.presentationModels.get(id);\n    }\n\n    findAllPresentationModelByType(type) {\n        if (!type || !this.presentationModelsPerType.has(type)) {\n            return [];\n        }\n        return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n    }\n\n    deletePresentationModel(model, notify) {\n        if (!model) {\n            return;\n        }\n        if (this.containsPresentationModel(model.id)) {\n            this.remove(model);\n            if (!notify || model.clientSideOnly) {\n                return;\n            }\n            this.clientDolphin.getClientConnector().send(CommandFactory.createPresentationModelDeletedCommand(model.id), null);\n        }\n    }\n\n    containsPresentationModel(id) {\n        return this.presentationModels.has(id);\n    }\n\n    addAttributeById(attribute) {\n        if (!attribute || this.attributesPerId.has(attribute.id)) {\n            return;\n        }\n        this.attributesPerId.set(attribute.id, attribute);\n    }\n\n    removeAttributeById(attribute) {\n        if (!attribute || !this.attributesPerId.has(attribute.id)) {\n            return;\n        }\n        this.attributesPerId.delete(attribute.id);\n    }\n\n    findAttributeById(id) {\n        return this.attributesPerId.get(id);\n    }\n\n    addAttributeByQualifier(attribute) {\n        if (!attribute || !attribute.getQualifier()) {\n            return;\n        }\n        var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n        if (!attributes) {\n            attributes = [];\n            this.attributesPerQualifier.set(attribute.getQualifier(), attributes);\n        }\n        if (!(attributes.indexOf(attribute) > -1)) {\n            attributes.push(attribute);\n        }\n    }\n\n    removeAttributeByQualifier(attribute) {\n        if (!attribute || !attribute.getQualifier()) {\n            return;\n        }\n        var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n        if (!attributes) {\n            return;\n        }\n        if (attributes.length > -1) {\n            attributes.splice(attributes.indexOf(attribute), 1);\n        }\n        if (attributes.length === 0) {\n            this.attributesPerQualifier.delete(attribute.getQualifier());\n        }\n    }\n\n    findAllAttributesByQualifier(qualifier) {\n        if (!qualifier || !this.attributesPerQualifier.has(qualifier)) {\n            return [];\n        }\n        return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n    }\n\n    onModelStoreChange(eventHandler) {\n        this.modelStoreChangeBus.onEvent(eventHandler);\n    }\n\n    onModelStoreChangeForType(presentationModelType, eventHandler) {\n        this.modelStoreChangeBus.onEvent(pmStoreEvent => {\n            if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                eventHandler(pmStoreEvent);\n            }\n        });\n    }\n}\n\n","import EventBus from './eventBus'\n\nvar presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n\nexport default class ClientPresentationModel {\n    constructor(id, presentationModelType) {\n        this.id = id;\n        this.presentationModelType = presentationModelType;\n        this.attributes = [];\n        this.clientSideOnly = false;\n        this.dirty = false;\n        if (typeof id !== 'undefined' && id != null) {\n            this.id = id;\n        }\n        else {\n            this.id = (presentationModelInstanceCount++).toString();\n        }\n        this.invalidBus = new EventBus();\n        this.dirtyValueChangeBus = new EventBus();\n    }\n    // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n    /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n    copy() {\n        var result = new ClientPresentationModel(null, this.presentationModelType);\n        result.clientSideOnly = true;\n        this.getAttributes().forEach((attribute) => {\n            var attributeCopy = attribute.copy();\n            result.addAttribute(attributeCopy);\n        });\n        return result;\n    }\n    //add array of attributes\n    addAttributes(attributes) {\n        if (!attributes || attributes.length < 1)\n            return;\n        attributes.forEach(attr => {\n            this.addAttribute(attr);\n        });\n    }\n    addAttribute(attribute) {\n        if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n            return;\n        }\n        if (this.findAttributeByPropertyName(attribute.propertyName)) {\n            throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                + \" in presentation model with id: \" + this.id);\n        }\n        if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n            throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                + \" in presentation model with id: \" + this.id);\n        }\n        attribute.setPresentationModel(this);\n        this.attributes.push(attribute);\n        attribute.onValueChange(() => {\n            this.invalidBus.trigger({ source: this });\n        });\n    }\n    onInvalidated(handleInvalidate) {\n        this.invalidBus.onEvent(handleInvalidate);\n    }\n    /** returns a copy of the internal state */\n    getAttributes() {\n        return this.attributes.slice(0);\n    }\n    getAt(propertyName) {\n        return this.findAttributeByPropertyName(propertyName);\n    }\n    findAllAttributesByPropertyName(propertyName) {\n        var result = [];\n        if (!propertyName)\n            return null;\n        this.attributes.forEach((attribute) => {\n            if (attribute.propertyName == propertyName) {\n                result.push(attribute);\n            }\n        });\n        return result;\n    }\n    findAttributeByPropertyName(propertyName) {\n        if (!propertyName)\n            return null;\n        for (var i = 0; i < this.attributes.length; i++) {\n            if ((this.attributes[i].propertyName == propertyName)) {\n                return this.attributes[i];\n            }\n        }\n        return null;\n    }\n    findAttributeByQualifier(qualifier) {\n        if (!qualifier)\n            return null;\n        for (var i = 0; i < this.attributes.length; i++) {\n            if (this.attributes[i].getQualifier() == qualifier) {\n                return this.attributes[i];\n            }\n        }\n        return null;\n    }\n    findAttributeById(id) {\n        if (!id)\n            return null;\n        for (var i = 0; i < this.attributes.length; i++) {\n            if (this.attributes[i].id == id) {\n                return this.attributes[i];\n            }\n        }\n        return null;\n    }\n    syncWith(sourcePresentationModel) {\n        this.attributes.forEach((targetAttribute) => {\n            var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName);\n            if (sourceAttribute) {\n                targetAttribute.syncWith(sourceAttribute);\n            }\n        });\n    }\n}\n","import Emitter from 'emitter-component';\nimport Promise from '../bower_components/core.js/library/fn/promise';\nimport CommandFactory from './commands/commandFactory';\nimport {exists, checkMethod, checkParam} from './utils';\n\nexport default class ClientContext{\n\n    constructor(dolphin, beanManager, controllerManager, connector){\n        checkMethod('ClientContext(dolphin, beanManager, controllerManager, connector)');\n        checkParam(dolphin, 'dolphin');\n        checkParam(beanManager, 'beanManager');\n        checkParam(controllerManager, 'controllerManager');\n        checkParam(connector, 'connector');\n\n        this.dolphin = dolphin;\n        this.beanManager = beanManager;\n        this._controllerManager = controllerManager;\n        this._connector = connector;\n        this.connectionPromise = null;\n        this.isConnected = false;\n    }\n\n    connect(){\n        let self = this;\n        this.connectionPromise = new Promise((resolve) => {\n            self._connector.connect();\n            self._connector.invoke(CommandFactory.createCreateContextCommand()).then(() => {\n                self.isConnected = true;\n                resolve();\n            });\n        });\n        return this.connectionPromise;\n    }\n\n    onConnect(){\n        if(exists(this.connectionPromise)){\n            if(!this.isConnected){\n                return this.connectionPromise;\n            }else{\n                return new Promise((resolve) => {\n                    resolve();\n                });\n            }\n        }else{\n            return this.connect();\n        }\n    }\n\n    createController(name){\n        checkMethod('ClientContext.createController(name)');\n        checkParam(name, 'name');\n\n        return this._controllerManager.createController(name);\n    }\n\n    disconnect(){\n        let self = this;\n        this.dolphin.stopPushListening();\n        return new Promise((resolve) => {\n            self._controllerManager.destroy().then(() => {\n                self._connector.invoke(CommandFactory.createDestroyContextCommand());\n                self.dolphin = null;\n                self.beanManager = null;\n                self._controllerManager = null;\n                self._connector = null;\n                resolve();\n            });\n        });\n    }\n}\n\nEmitter(ClientContext.prototype);","import {VALUE_CHANGED_COMMAND_ID, PRESENTATION_MODEL_DELETED_COMMAND_ID} from './commands/commandConstants';\n\nexport default class BlindCommandBatcher {\n    constructor(folding = true, maxBatchSize = 50) {\n        this.folding = folding;\n        this.maxBatchSize = maxBatchSize;\n    }\n    batch(queue) {\n        let batch = [];\n        let batchLength = 0;\n        while(queue[batchLength] && batchLength <= this.maxBatchSize) {\n            const element = queue[batchLength];\n            batchLength++;\n            if(this.folding) {\n                if(element.command.id == VALUE_CHANGED_COMMAND_ID &&\n                    batch.length > 0 &&\n                    batch[batch.length - 1].command.id == VALUE_CHANGED_COMMAND_ID &&\n                    element.command.attributeId == batch[batch.length - 1].command.attributeId) {\n                    //merge ValueChange for same value\n                    batch[batch.length - 1].command.newValue = element.command.newValue;\n                } else if(element.command.id == PRESENTATION_MODEL_DELETED_COMMAND_ID) {\n                    //We do not need it...\n                } else {\n                    batch.push(element);\n                }\n            } else {\n                batch.push(element);\n            }\n            if(element.handler) {\n                break;\n            }\n        }\n        queue.splice(0, batchLength);\n        return batch;\n    }\n}","import {exists, checkMethod, checkParam} from '../utils';\nimport {JS_STRING_TYPE} from '../constants';\nimport {\n    CREATE_PRESENTATION_MODEL_COMMAND_ID,\n    VALUE_CHANGED_COMMAND_ID,\n    ATTRIBUTE_METADATA_CHANGED_COMMAND_ID,\n    CALL_ACTION_COMMAND_ID,\n    CHANGE_ATTRIBUTE_METADATA_COMMAND_ID,\n    CREATE_CONTEXT_COMMAND_ID,\n    CREATE_CONTROLLER_COMMAND_ID,\n    DELETE_PRESENTATION_MODEL_COMMAND_ID,\n    DESTROY_CONTEXT_COMMAND_ID,\n    DESTROY_CONTROLLER_COMMAND_ID,\n    INTERRUPT_LONG_POLL_COMMAND_ID,\n    PRESENTATION_MODEL_DELETED_COMMAND_ID,\n    START_LONG_POLL_COMMAND_ID\n} from './commandConstants';\nimport {ID, PM_ID, PM_TYPE, PM_ATTRIBUTES, NAME, ATTRIBUTE_ID, VALUE, CONTROLLER_ID, PARAMS} from './commandConstants';\nimport ValueChangedCommand from './impl/valueChangedCommand';\nimport AttributeMetadataChangedCommand from './impl/attributeMetadataChangedCommand';\nimport CallActionCommand from './impl/callActionCommand';\nimport ChangeAttributeMetadataCommand from './impl/changeAttributeMetadataCommand';\nimport CreateContextCommand from './impl/createContextCommand';\nimport CreateControllerCommand from './impl/createControllerCommand';\nimport CreatePresentationModelCommand from './impl/createPresentationModelCommand';\nimport DeletePresentationModelCommand from './impl/deletePresentationModelCommand';\nimport DestroyContextCommand from './impl/destroyContextCommand';\nimport DestroyControllerCommand from './impl/destroyControllerCommand';\nimport InterruptLongPollCommand from './impl/interruptLongPollCommand';\nimport PresentationModelDeletedCommand from './impl/presentationModelDeletedCommand';\nimport StartLongPollCommand from './impl/startLongPollCommand';\nimport CodecError from './codecError';\n\n\nexport default class Codec {\n\n    static _encodeAttributeMetadataChangedCommand(command) {\n        checkMethod(\"Codec.encodeAttributeMetadataChangedCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.attributeId, \"command.attributeId\");\n        checkParam(command.metadataName, \"command.metadataName\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = ATTRIBUTE_METADATA_CHANGED_COMMAND_ID;\n        jsonCommand[ATTRIBUTE_ID] = command.attributeId;\n        jsonCommand[NAME] = command.metadataName;\n        jsonCommand[VALUE] = command.value;\n        return jsonCommand;\n    }\n\n    static _decodeAttributeMetadataChangedCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeAttributeMetadataChangedCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[ATTRIBUTE_ID], \"jsonCommand[ATTRIBUTE_ID]\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n\n        let command = new AttributeMetadataChangedCommand();\n        command.attributeId = jsonCommand[ATTRIBUTE_ID];\n        command.metadataName = jsonCommand[NAME];\n        command.value = jsonCommand[VALUE];\n        return command;\n    }\n\n    static _encodeCallActionCommand(command) {\n        checkMethod(\"Codec.encodeCallActionCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.controllerid, \"command.controllerid\");\n        checkParam(command.actionName, \"command.actionName\");\n        checkParam(command.params, \"command.params\");\n\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CALL_ACTION_COMMAND_ID;\n        jsonCommand[CONTROLLER_ID] = command.controllerid;\n        jsonCommand[NAME] = command.actionName;\n        jsonCommand[PARAMS] = command.params.map((param) => {\n            let result = {};\n            result[NAME] = param.name;\n            if (exists(param.value)) {\n                result[VALUE] = param.value;\n            }\n            return result;\n        });\n        return jsonCommand;\n    }\n\n    static _decodeCallActionCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeCallActionCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[CONTROLLER_ID], \"jsonCommand[CONTROLLER_ID]\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n        checkParam(jsonCommand[PARAMS], \"jsonCommand[PARAMS]\");\n\n        let command = new CallActionCommand();\n        command.controllerid = jsonCommand[CONTROLLER_ID];\n        command.actionName = jsonCommand[NAME];\n        //TODO: Für die Params sollten wir eine Klasse bereitstellen\n        command.params = jsonCommand[PARAMS].map((param) => {\n            return {\n                'name': param[NAME],\n                'value': exists(param[VALUE]) ? param[VALUE] : null\n            };\n        });\n        return command;\n    }\n\n    static _encodeChangeAttributeMetadataCommand(command) {\n        checkMethod(\"Codec.encodeChangeAttributeMetadataCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.attributeId, \"command.attributeId\");\n        checkParam(command.metadataName, \"command.metadataName\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CHANGE_ATTRIBUTE_METADATA_COMMAND_ID;\n        jsonCommand[ATTRIBUTE_ID] = command.attributeId;\n        jsonCommand[NAME] = command.metadataName;\n        jsonCommand[VALUE] = command.value;\n        return jsonCommand;\n    }\n\n    static _decodeChangeAttributeMetadataCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeChangeAttributeMetadataCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[ATTRIBUTE_ID], \"jsonCommand[ATTRIBUTE_ID]\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n\n        let command = new ChangeAttributeMetadataCommand();\n        command.attributeId = jsonCommand[ATTRIBUTE_ID];\n        command.metadataName = jsonCommand[NAME];\n        command.value = jsonCommand[VALUE];\n        return command;\n    }\n\n    static _encodeCreateContextCommand(command) {\n        checkMethod(\"Codec.encodeCreateContextCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CREATE_CONTEXT_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeCreateContextCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeCreateContextCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new CreateContextCommand();\n        return command;\n    }\n\n    static _encodeCreateControllerCommand(command) {\n        checkMethod(\"Codec._encodeCreateControllerCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.controllerName, \"command.controllerName\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CREATE_CONTROLLER_COMMAND_ID;\n        jsonCommand[NAME] = command.controllerName;\n        jsonCommand[CONTROLLER_ID] = command.parentControllerId;\n        return jsonCommand;\n    }\n\n    static _decodeCreateControllerCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeCreateControllerCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[NAME], \"jsonCommand[NAME]\");\n        checkParam(jsonCommand[CONTROLLER_ID], \"jsonCommand[CONTROLLER_ID]\");\n\n        let command = new CreateControllerCommand();\n        command.controllerName = jsonCommand[NAME];\n        command.parentControllerId = jsonCommand[CONTROLLER_ID];\n        return command;\n    }\n\n    static _encodeCreatePresentationModelCommand(command) {\n        checkMethod(\"Codec.encodeCreatePresentationModelCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.pmId, \"command.pmId\");\n        checkParam(command.pmType, \"command.pmType\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = CREATE_PRESENTATION_MODEL_COMMAND_ID;\n        jsonCommand[PM_ID] = command.pmId;\n        jsonCommand[PM_TYPE] = command.pmType;\n        jsonCommand[PM_ATTRIBUTES] = command.attributes.map((attribute) => {\n            let result = {};\n            result[NAME] = attribute.propertyName;\n            result[ATTRIBUTE_ID] = attribute.id;\n            if (exists(attribute.value)) {\n                result[VALUE] = attribute.value;\n            }\n            return result;\n        });\n        return jsonCommand;\n    }\n\n    static _decodeCreatePresentationModelCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeCreatePresentationModelCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[PM_ID], \"jsonCommand[PM_ID]\");\n        checkParam(jsonCommand[PM_TYPE], \"jsonCommand[PM_TYPE]\");\n\n        let command = new CreatePresentationModelCommand();\n        command.pmId = jsonCommand[PM_ID];\n        command.pmType = jsonCommand[PM_TYPE];\n\n        //TODO: Für die Attribute sollten wir eine Klasse bereitstellen\n        command.attributes = jsonCommand[PM_ATTRIBUTES].map((attribute) => {\n            return {\n                'propertyName': attribute[NAME],\n                'id': attribute[ATTRIBUTE_ID],\n                'value': exists(attribute[VALUE]) ? attribute[VALUE] : null\n            };\n        });\n        return command;\n    }\n\n    static _encodeDeletePresentationModelCommand(command) {\n        checkMethod(\"Codec._encodeDeletePresentationModelCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.pmId, \"command.pmId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = DELETE_PRESENTATION_MODEL_COMMAND_ID;\n        jsonCommand[PM_ID] = command.pmId;\n        return jsonCommand;\n    }\n\n    static _decodeDeletePresentationModelCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeDeletePresentationModelCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[PM_ID], \"jsonCommand[PM_ID]\");\n\n\n        let command = new DeletePresentationModelCommand();\n        command.pmId = jsonCommand[PM_ID];\n        return command;\n    }\n\n    static _encodeDestroyContextCommand(command) {\n        checkMethod(\"Codec._encodeDestroyContextCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = DESTROY_CONTEXT_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeDestroyContextCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeDestroyContextCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new DestroyContextCommand();\n        return command;\n    }\n\n    static _encodeDestroyControllerCommand(command) {\n        checkMethod(\"Codec._encodeDestroyControllerCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.controllerId, \"command.controllerId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = DESTROY_CONTROLLER_COMMAND_ID;\n        jsonCommand[CONTROLLER_ID] = command.controllerId;\n        return jsonCommand;\n    }\n\n    static _decodeDestroyControllerCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeDestroyControllerCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[CONTROLLER_ID], \"jsonCommand[CONTROLLER_ID]\");\n\n        let command = new DestroyControllerCommand();\n        command.controllerId = jsonCommand[CONTROLLER_ID];\n        return command;\n    }\n\n    static _encodeInterruptLongPollCommand(command) {\n        checkMethod(\"Codec._encodeInterruptLongPollCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = INTERRUPT_LONG_POLL_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeInterruptLongPollCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeInterruptLongPollCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new InterruptLongPollCommand();\n        return command;\n    }\n\n    static _encodePresentationModelDeletedCommand(command) {\n        checkMethod(\"Codec._encodePresentationModelDeletedCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.pmId, \"command.pmId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = PRESENTATION_MODEL_DELETED_COMMAND_ID;\n        jsonCommand[PM_ID] = command.pmId;\n        return jsonCommand;\n    }\n\n    static _decodePresentationModelDeletedCommand(jsonCommand) {\n        checkMethod(\"Codec._decodePresentationModelDeletedCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[PM_ID], \"jsonCommand[PM_ID]\");\n\n        let command = new PresentationModelDeletedCommand();\n        command.pmId = jsonCommand[PM_ID];\n        return command;\n    }\n\n    static _encodeStartLongPollCommand(command) {\n        checkMethod(\"Codec._encodeStartLongPollCommand\");\n        checkParam(command, \"command\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = START_LONG_POLL_COMMAND_ID;\n        return jsonCommand;\n    }\n\n    static _decodeStartLongPollCommand(jsonCommand) {\n        checkMethod(\"Codec._decodeStartLongPollCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n\n        let command = new StartLongPollCommand();\n        return command;\n    }\n\n    static _encodeValueChangedCommand(command) {\n        checkMethod(\"Codec.encodeValueChangedCommand\");\n        checkParam(command, \"command\");\n        checkParam(command.attributeId, \"command.attributeId\");\n\n        let jsonCommand = {};\n        jsonCommand[ID] = VALUE_CHANGED_COMMAND_ID;\n        jsonCommand[ATTRIBUTE_ID] = command.attributeId;\n        if (exists(command.newValue)) {\n            jsonCommand[VALUE] = command.newValue;\n        }\n        return jsonCommand;\n    }\n\n    static _decodeValueChangedCommand(jsonCommand) {\n        checkMethod(\"Codec.decodeValueChangedCommand\");\n        checkParam(jsonCommand, \"jsonCommand\");\n        checkParam(jsonCommand[ATTRIBUTE_ID], \"jsonCommand[ATTRIBUTE_ID]\");\n\n        let command = new ValueChangedCommand();\n        command.attributeId = jsonCommand[ATTRIBUTE_ID];\n        if (exists(jsonCommand[VALUE])) {\n            command.newValue = jsonCommand[VALUE];\n        } else {\n            command.newValue = null;\n        }\n        return command;\n    }\n\n    static encode(commands) {\n        checkMethod(\"Codec.encode\");\n        checkParam(commands, \"commands\");\n\n        let self = this;\n        return JSON.stringify(commands.map((command) => {\n            if (command.id === ATTRIBUTE_METADATA_CHANGED_COMMAND_ID) {\n                return self._encodeAttributeMetadataChangedCommand(command);\n            } else if (command.id === CALL_ACTION_COMMAND_ID) {\n                return self._encodeCallActionCommand(command);\n            } else if (command.id === CHANGE_ATTRIBUTE_METADATA_COMMAND_ID) {\n                return self._encodeChangeAttributeMetadataCommand(command);\n            } else if (command.id === CREATE_CONTEXT_COMMAND_ID) {\n                return self._encodeCreateContextCommand(command);\n            } else if (command.id === CREATE_CONTROLLER_COMMAND_ID) {\n                return self._encodeCreateControllerCommand(command);\n            } else if (command.id === CREATE_PRESENTATION_MODEL_COMMAND_ID) {\n                return self._encodeCreatePresentationModelCommand(command);\n            } else if (command.id === DELETE_PRESENTATION_MODEL_COMMAND_ID) {\n                return self._encodeDeletePresentationModelCommand(command);\n            } else if (command.id === DESTROY_CONTEXT_COMMAND_ID) {\n                return self._encodeDestroyContextCommand(command);\n            } else if (command.id === DESTROY_CONTROLLER_COMMAND_ID) {\n                return self._encodeDestroyControllerCommand(command);\n            } else if (command.id === INTERRUPT_LONG_POLL_COMMAND_ID) {\n                return self._encodeInterruptLongPollCommand(command);\n            } else if (command.id === PRESENTATION_MODEL_DELETED_COMMAND_ID) {\n                return self._encodePresentationModelDeletedCommand(command);\n            } else if (command.id === START_LONG_POLL_COMMAND_ID) {\n                return self._encodeStartLongPollCommand(command);\n            } else if (command.id === VALUE_CHANGED_COMMAND_ID) {\n                return self._encodeValueChangedCommand(command);\n            } else {\n                throw new CodecError('Command of type ' + command.id + ' can not be handled');\n            }\n        }));\n    }\n\n    static decode(transmitted) {\n        checkMethod(\"Codec.decode\");\n        checkParam(transmitted, \"transmitted\");\n\n        if (typeof transmitted === JS_STRING_TYPE) {\n            let self = this;\n            return JSON.parse(transmitted).map(function (command) {\n                if (command.id === ATTRIBUTE_METADATA_CHANGED_COMMAND_ID) {\n                    return self._decodeAttributeMetadataChangedCommand(command);\n                } else if (command.id === CALL_ACTION_COMMAND_ID) {\n                    return self._decodeCallActionCommand(command);\n                } else if (command.id === CHANGE_ATTRIBUTE_METADATA_COMMAND_ID) {\n                    return self._decodeChangeAttributeMetadataCommand(command);\n                } else if (command.id === CREATE_CONTEXT_COMMAND_ID) {\n                    return self._decodeCreateContextCommand(command);\n                } else if (command.id === CREATE_CONTROLLER_COMMAND_ID) {\n                    return self._decodeCreateControllerCommand(command);\n                } else if (command.id === CREATE_PRESENTATION_MODEL_COMMAND_ID) {\n                    return self._decodeCreatePresentationModelCommand(command);\n                } else if (command.id === DELETE_PRESENTATION_MODEL_COMMAND_ID) {\n                    return self._decodeDeletePresentationModelCommand(command);\n                } else if (command.id === DESTROY_CONTEXT_COMMAND_ID) {\n                    return self._decodeDestroyContextCommand(command);\n                } else if (command.id === DESTROY_CONTROLLER_COMMAND_ID) {\n                    return self._decodeDestroyControllerCommand(command);\n                } else if (command.id === INTERRUPT_LONG_POLL_COMMAND_ID) {\n                    return self._decodeInterruptLongPollCommand(command);\n                } else if (command.id === PRESENTATION_MODEL_DELETED_COMMAND_ID) {\n                    return self._decodePresentationModelDeletedCommand(command);\n                } else if (command.id === START_LONG_POLL_COMMAND_ID) {\n                    return self._decodeStartLongPollCommand(command);\n                } else if (command.id === VALUE_CHANGED_COMMAND_ID) {\n                    return self._decodeValueChangedCommand(command);\n                } else {\n                    throw new CodecError('Command of type ' + command.id + ' can not be handled');\n                }\n            });\n        } else {\n            throw new CodecError('Can not decode data that is not of type string');\n        }\n    }\n}","export default class CodecError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}","export const ATTRIBUTE_METADATA_CHANGED_COMMAND_ID = 'AttributeMetadataChanged';\nexport const CALL_ACTION_COMMAND_ID = 'CallAction';\nexport const CHANGE_ATTRIBUTE_METADATA_COMMAND_ID = 'ChangeAttributeMetadata';\nexport const CREATE_CONTEXT_COMMAND_ID = 'CreateContext';\nexport const CREATE_CONTROLLER_COMMAND_ID = 'CreateController';\nexport const CREATE_PRESENTATION_MODEL_COMMAND_ID = 'CreatePresentationModel';\nexport const DELETE_PRESENTATION_MODEL_COMMAND_ID = 'DeletePresentationModel';\nexport const DESTROY_CONTEXT_COMMAND_ID = 'DestroyContext';\nexport const DESTROY_CONTROLLER_COMMAND_ID = 'DestroyController';\nexport const INTERRUPT_LONG_POLL_COMMAND_ID = 'InterruptLongPoll';\nexport const PRESENTATION_MODEL_DELETED_COMMAND_ID = 'PresentationModelDeleted';\nexport const START_LONG_POLL_COMMAND_ID = 'StartLongPoll';\nexport const VALUE_CHANGED_COMMAND_ID = 'ValueChanged';\n\nexport const ID = \"id\";\nexport const ATTRIBUTE_ID = \"a_id\";\nexport const PM_ID = \"p_id\";\nexport const CONTROLLER_ID = \"c_id\";\nexport const PM_TYPE = \"t\";\nexport const NAME = \"n\";\nexport const VALUE = \"v\";\nexport const PARAMS = \"p\";\nexport const PM_ATTRIBUTES = \"a\";","import CreateContextCommand from './impl/createContextCommand';\nimport CreateControllerCommand from './impl/createControllerCommand';\nimport CallActionCommand from './impl/callActionCommand';\nimport DestroyControllerCommand from './impl/destroyControllerCommand';\nimport DestroyContextCommand from './impl/destroyContextCommand';\nimport StartLongPollCommand from './impl/startLongPollCommand';\nimport InterruptLongPollCommand from './impl/interruptLongPollCommand';\nimport CreatePresentationModelCommand from './impl/createPresentationModelCommand';\nimport DeletePresentationModelCommand from './impl/deletePresentationModelCommand';\nimport PresentationModelDeletedCommand from './impl/presentationModelDeletedCommand';\nimport ValueChangedCommand from './impl/valueChangedCommand';\nimport ChangeAttributeMetadataCommand from './impl/changeAttributeMetadataCommand';\nimport AttributeMetadataChangedCommand from './impl/attributeMetadataChangedCommand';\n\nexport default class CommandFactory {\n\n    static createCreateContextCommand() {\n        return new CreateContextCommand();\n    }\n\n    static createCreateControllerCommand(controllerName, parentControllerId) {\n        const command = new CreateControllerCommand();\n        command.init(controllerName, parentControllerId);\n        return command;\n    }\n\n    static createCallActionCommand(controllerid, actionName, params) {\n        const command = new CallActionCommand();\n        command.init(controllerid, actionName, params);\n        return command;\n    }\n\n    static createDestroyControllerCommand(controllerId) {\n        const command = new DestroyControllerCommand();\n        command.init(controllerId);\n        return command;\n    }\n\n    static createDestroyContextCommand() {\n        return new DestroyContextCommand();\n    }\n\n    static createStartLongPollCommand() {\n        return new StartLongPollCommand();\n    }\n\n    static createInterruptLongPollCommand() {\n        return new InterruptLongPollCommand();\n    }\n\n    static createCreatePresentationModelCommand(presentationModel) {\n        const command = new CreatePresentationModelCommand();\n        command.init(presentationModel);\n        return command;\n    }\n\n    static createDeletePresentationModelCommand(pmId) {\n        const command = new DeletePresentationModelCommand();\n        command.init(pmId);\n        return command;\n    }\n\n    static createPresentationModelDeletedCommand(pmId) {\n        let command = new PresentationModelDeletedCommand();\n        command.init(pmId);\n        return command;\n    }\n\n    static createValueChangedCommand(attributeId, newValue) {\n        let command = new ValueChangedCommand();\n        command.init(attributeId, newValue);\n        return command;\n    }\n\n    static createChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n        let command = new ChangeAttributeMetadataCommand();\n        command.init(attributeId, metadataName, value);\n        return command;\n    }\n\n    static createAttributeMetadataChangedCommand(attributeId, metadataName, value) {\n        let command = new AttributeMetadataChangedCommand();\n        command.init(attributeId, metadataName, value);\n        return command;\n    }\n}","import {ATTRIBUTE_METADATA_CHANGED_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class AttributeMetadataChangedCommand {\n\n    constructor() {\n        this.id = ATTRIBUTE_METADATA_CHANGED_COMMAND_ID;\n    }\n\n    init(attributeId, metadataName, value) {\n        checkMethod('AttributeMetadataChangedCommand.init()');\n        checkParam(attributeId, 'attributeId');\n        checkParam(metadataName, 'metadataName');\n\n        this.attributeId = attributeId;\n        this.metadataName = metadataName;\n        this.value = value;\n    }\n}","import {CALL_ACTION_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class CallActionCommand {\n    \n    constructor() {\n        this.id = CALL_ACTION_COMMAND_ID;\n    }\n\n    init(controllerid, actionName, params) {\n        checkMethod('CreateControllerCommand.init()');\n        checkParam(controllerid, 'controllerid');\n        checkParam(actionName, 'actionName');\n\n        this.controllerid = controllerid;\n        this.actionName = actionName;\n        this.params = params;\n    }\n\n}","import {CHANGE_ATTRIBUTE_METADATA_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class ChangeAttributeMetadataCommand {\n\n    constructor() {\n        this.id = CHANGE_ATTRIBUTE_METADATA_COMMAND_ID;\n    }\n\n    init(attributeId, metadataName, value) {\n        checkMethod('ChangeAttributeMetadataCommand.init()');\n        checkParam(attributeId, 'attributeId');\n        checkParam(metadataName, 'metadataName');\n\n        this.attributeId = attributeId;\n        this.metadataName = metadataName;\n        this.value = value;\n    }\n}","import {CREATE_CONTEXT_COMMAND_ID} from '../commandConstants';\n\nexport default class CreateContextCommand {\n\n    constructor() {\n        this.id = CREATE_CONTEXT_COMMAND_ID;\n    }\n\n}","import {CREATE_CONTROLLER_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class CreateControllerCommand {\n\n    constructor() {\n        this.id = CREATE_CONTROLLER_COMMAND_ID;\n    }\n\n    init(controllerName, parentControllerId) {\n        checkMethod('CreateControllerCommand.init()');\n        checkParam(controllerName, 'controllerName');\n\n        this.controllerName = controllerName;\n        this.parentControllerId = parentControllerId;\n    }\n\n}","import {CREATE_PRESENTATION_MODEL_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class CreatePresentationModelCommand {\n\n    constructor() {\n        this.id = CREATE_PRESENTATION_MODEL_COMMAND_ID;\n    }\n\n    init(presentationModel) {\n        checkMethod('CreatePresentationModelCommand.init()');\n        checkParam(presentationModel, 'presentationModel');\n\n        this.attributes = [];\n        this.clientSideOnly = false;\n        this.pmId = presentationModel.id;\n        this.pmType = presentationModel.presentationModelType;\n        var command = this;\n        presentationModel.getAttributes().forEach(function (attr) {\n            command.attributes.push({\n                propertyName: attr.propertyName,\n                id: attr.id,\n                value: attr.getValue()\n            });\n        });\n    }\n}","import {DELETE_PRESENTATION_MODEL_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class DeletePresentationModelCommand {\n\n    constructor() {\n        this.id = DELETE_PRESENTATION_MODEL_COMMAND_ID;\n    }\n\n    init(pmId) {\n        checkMethod('DeletePresentationModelCommand.init()');\n        checkParam(pmId, 'pmId');\n\n        this.pmId = pmId;\n    }\n}\n","import {DESTROY_CONTEXT_COMMAND_ID} from '../commandConstants';\n\nexport default class DestroyContextCommand {\n\n    constructor() {\n        this.id = DESTROY_CONTEXT_COMMAND_ID;\n    }\n\n}","import {DESTROY_CONTROLLER_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class DestroyControllerCommand {\n\n    constructor() {\n        this.id = DESTROY_CONTROLLER_COMMAND_ID;\n    }\n\n    init(controllerId) {\n        checkMethod('DestroyControllerCommand.init()');\n        checkParam(controllerId, 'controllerId');\n\n        this.controllerId = controllerId;\n    }\n\n}","import {INTERRUPT_LONG_POLL_COMMAND_ID} from '../commandConstants'\n\nexport default class InterruptLongPollCommand {\n\n    constructor() {\n        this.id = INTERRUPT_LONG_POLL_COMMAND_ID;\n    }\n}","import {PRESENTATION_MODEL_DELETED_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class PresentationModelDeletedCommand {\n\n    constructor() {\n        this.id = PRESENTATION_MODEL_DELETED_COMMAND_ID;\n    }\n\n    init(pmId) {\n        checkMethod('PresentationModelDeletedCommand.init()');\n        checkParam(pmId, 'pmId');\n\n        this.pmId = pmId;\n    }\n}","import {START_LONG_POLL_COMMAND_ID} from '../commandConstants'\n\nexport default class StartLongPollCommand {\n\n    constructor() {\n        this.id = START_LONG_POLL_COMMAND_ID;\n    }\n}\n","import {VALUE_CHANGED_COMMAND_ID} from '../commandConstants';\nimport {checkMethod, checkParam} from '../../utils';\n\nexport default class ValueChangedCommand {\n\n    constructor() {\n        this.id = VALUE_CHANGED_COMMAND_ID;\n    }\n\n    init(attributeId, newValue) {\n        checkMethod('ValueChangedCommand.init()');\n        checkParam(attributeId, 'attributeId');\n\n        this.attributeId = attributeId;\n        this.newValue = newValue;\n    }\n}","import Promise from '../bower_components/core.js/library/fn/promise';\nimport {exists, checkMethod, checkParam} from './utils';\nimport CommandFactory from './commands/commandFactory';\nimport {ADDED_TYPE, REMOVED_TYPE} from './constants';\n\n\nconst DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nconst ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nconst HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nconst DOLPHIN_LIST_SPLICE = '@DP:LS@';\nconst SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nconst SOURCE_SYSTEM_CLIENT = 'client';\nconst SOURCE_SYSTEM_SERVER = 'server';\n\nexport default class Connector{\n\n    constructor(url, dolphin, classRepository, config) {\n        checkMethod('Connector(url, dolphin, classRepository, config)');\n        checkParam(url, 'url');\n        checkParam(dolphin, 'dolphin');\n        checkParam(classRepository, 'classRepository');\n\n        let self = this;\n        this.dolphin = dolphin;\n        this.config = config;\n        this.classRepository = classRepository;\n        this.highlanderPMResolver = function() {};\n        this.highlanderPMPromise = new Promise(function(resolve) {\n            self.highlanderPMResolver = resolve;\n        });\n\n        dolphin.getClientModelStore().onModelStoreChange((event) => {\n            let model = event.clientPresentationModel;\n            let sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n            if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n                if (event.eventType === ADDED_TYPE) {\n                    self.onModelAdded(model);\n                } else if (event.eventType === REMOVED_TYPE) {\n                    self.onModelRemoved(model);\n                }\n            }\n        });\n    }\n    connect() {\n        let that = this;\n            that.dolphin.startPushListening(CommandFactory.createStartLongPollCommand(), CommandFactory.createInterruptLongPollCommand());\n    }\n\n    onModelAdded(model) {\n        checkMethod('Connector.onModelAdded(model)');\n        checkParam(model, 'model');\n\n        var type = model.presentationModelType;\n        switch (type) {\n            case ACTION_CALL_BEAN:\n                // ignore\n                break;\n            case DOLPHIN_BEAN:\n                this.classRepository.registerClass(model);\n                break;\n            case HIGHLANDER_BEAN:\n                this.highlanderPMResolver(model);\n                break;\n            case DOLPHIN_LIST_SPLICE:\n                this.classRepository.spliceListEntry(model);\n                this.dolphin.deletePresentationModel(model);\n                break;\n            default:\n                this.classRepository.load(model);\n                break;\n        }\n    }\n\n    onModelRemoved(model) {\n        checkMethod('Connector.onModelRemoved(model)');\n        checkParam(model, 'model');\n        let type = model.presentationModelType;\n        switch (type) {\n            case DOLPHIN_BEAN:\n                this.classRepository.unregisterClass(model);\n                break;\n            case DOLPHIN_LIST_SPLICE:\n                // do nothing\n                break;\n            default:\n                this.classRepository.unload(model);\n                break;\n        }\n    }\n\n    invoke(command) {\n        checkMethod('Connector.invoke(command)');\n        checkParam(command, 'command');\n\n        var dolphin = this.dolphin;\n        return new Promise((resolve) => {\n            dolphin.send(command, {\n                onFinished: () => {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    getHighlanderPM() {\n        return this.highlanderPMPromise;\n    }\n}\n\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n","export const JS_STRING_TYPE = 'string';\n\nexport const DOLPHIN_BEAN = 0;\nexport const BYTE = 1;\nexport const SHORT = 2;\nexport const INT = 3;\nexport const LONG = 4;\nexport const FLOAT = 5;\nexport const DOUBLE = 6;\nexport const BOOLEAN = 7;\nexport const STRING = 8;\nexport const DATE = 9;\nexport const ENUM = 10;\nexport const CALENDAR = 11;\nexport const LOCAL_DATE_FIELD_TYPE = 55;\nexport const LOCAL_DATE_TIME_FIELD_TYPE = 52;\nexport const ZONED_DATE_TIME_FIELD_TYPE = 54;\n\n\nexport const ADDED_TYPE = \"ADDED\";\nexport const REMOVED_TYPE = \"REMOVED\";\n","import Promise from '../bower_components/core.js/library/fn/promise';\nimport Set from'../bower_components/core.js/library/fn/set';\nimport {exists, checkMethod, checkParam} from './utils';\n\nimport ControllerProxy from './controllerproxy.js';\n\nimport CommandFactory from './commands/commandFactory.js';\n\n\nimport { SOURCE_SYSTEM } from './connector.js';\nimport { SOURCE_SYSTEM_CLIENT } from './connector.js';\nimport { ACTION_CALL_BEAN } from './connector.js';\n\nconst CONTROLLER_ID = 'controllerId';\nconst MODEL = 'model';\nconst ERROR_CODE = 'errorCode';\n\nexport default class ControllerManager{\n\n    constructor(dolphin, classRepository, connector){\n        checkMethod('ControllerManager(dolphin, classRepository, connector)');\n        checkParam(dolphin, 'dolphin');\n        checkParam(classRepository, 'classRepository');\n        checkParam(connector, 'connector');\n\n        this.dolphin = dolphin;\n        this.classRepository = classRepository;\n        this.connector = connector;\n        this.controllers = new Set();\n    }\n\n    createController(name) {\n        return this._createController(name, null)\n    }\n\n    _createController(name, parentControllerId) {\n        checkMethod('ControllerManager.createController(name)');\n        checkParam(name, 'name');\n\n        let self = this;\n        let controllerId, modelId, model, controller;\n        return new Promise((resolve) => {\n            self.connector.getHighlanderPM().then((highlanderPM) => {\n                self.connector.invoke(CommandFactory.createCreateControllerCommand(name, parentControllerId)).then(() => {\n                    controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                    modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                    model = self.classRepository.mapDolphinToBean(modelId);\n                    controller = new ControllerProxy(controllerId, model, self);\n                    self.controllers.add(controller);\n                    resolve(controller);\n                });\n            });\n        });\n    }\n\n    invokeAction(controllerId, actionName, params) {\n        checkMethod('ControllerManager.invokeAction(controllerId, actionName, params)');\n        checkParam(controllerId, 'controllerId');\n        checkParam(actionName, 'actionName');\n\n        let self = this;\n        return new Promise((resolve, reject) =>{\n\n            let attributes = [\n                self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n                self.dolphin.attribute(ERROR_CODE)\n            ];\n\n            let pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n            let actionParams = [];\n            if(exists(params)) {\n                for (var param in params) {\n                    if (params.hasOwnProperty(param)) {\n                        let value = self.classRepository.mapParamToDolphin(params[param]);\n                        actionParams.push({name: param, value: value});\n                    }\n                }\n            }\n\n            self.connector.invoke(CommandFactory.createCallActionCommand(controllerId, actionName, actionParams)).then(() => {\n                let isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n                if (isError) {\n                    reject(new Error(\"Server side ControllerAction \" + actionName + \" caused an error. Please see server log for details.\"));\n                } else {\n                    resolve();\n                }\n                self.dolphin.deletePresentationModel(pm);\n            });\n        });\n    }\n\n    destroyController(controller) {\n        checkMethod('ControllerManager.destroyController(controller)');\n        checkParam(controller, 'controller');\n\n        let self = this;\n        return new Promise((resolve) => {\n            self.connector.getHighlanderPM().then((highlanderPM) => {\n                self.controllers.delete(controller);\n                highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controller.controllerId);\n                self.connector.invoke(CommandFactory.createDestroyControllerCommand(controller.getId())).then(resolve);\n            });\n        });\n    }\n\n    destroy() {\n        let controllersCopy = this.controllers;\n        let promises = [];\n        this.controllers = new Set();\n        controllersCopy.forEach((controller) => {\n            try {\n                promises.push(controller.destroy());\n            } catch (e) {\n                // ignore\n            }\n        });\n        return Promise.all(promises);\n    }\n}\n","import Set from '../bower_components/core.js/library/fn/set';\nimport {checkMethod, checkParam} from './utils';\n\nexport default class ControllerProxy{\n\n    constructor(controllerId, model, manager){\n        checkMethod('ControllerProxy(controllerId, model, manager)');\n        checkParam(controllerId, 'controllerId');\n        checkParam(model, 'model');\n        checkParam(manager, 'manager');\n\n        this.controllerId = controllerId;\n        this.model = model;\n        this.manager = manager;\n        this.destroyed = false;\n        this.onDestroyedHandlers = new Set();\n    }\n\n    getModel() {\n        return this.model;\n    }\n\n    getId() {\n        return this.controllerId;\n    }\n\n    invoke(name, params){\n        checkMethod('ControllerProxy.invoke(name, params)');\n        checkParam(name, 'name');\n\n        if (this.destroyed) {\n            throw new Error('The controller was already destroyed');\n        }\n        return this.manager.invokeAction(this.controllerId, name, params);\n    }\n\n    createController(name) {\n        return this.manager._createController(name, this.getId());\n    }\n\n    destroy(){\n        if (this.destroyed) {\n            throw new Error('The controller was already destroyed');\n        }\n        this.destroyed = true;\n        this.onDestroyedHandlers.forEach((handler) => {\n            try {\n                handler(this);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onDestroyed-handler', e);\n            }\n        }, this);\n        return this.manager.destroyController(this);\n    }\n\n    onDestroyed(handler){\n        checkMethod('ControllerProxy.onDestroyed(handler)');\n        checkParam(handler, 'handler');\n\n        var self = this;\n        this.onDestroyedHandlers.add(handler);\n        return {\n            unsubscribe: () => {\n                self.onDestroyedHandlers.delete(handler);\n            }\n        };\n    }\n}\n","import ClientConnector from './clientConnector'\nimport ClientDolphin from './clientDolphin'\nimport ClientModelStore from './clientModelStore'\nimport HttpTransmitter from './httpTransmitter'\nimport NoTransmitter from './noTransmitter'\n\n\nexport default class DolphinBuilder {\n\n    constructor() {\n        this.reset_ = false;\n        this.slackMS_ = 300;\n        this.maxBatchSize_ = 50;\n        this.supportCORS_ = false;\n    }\n\n    url(url) {\n        this.url_ = url;\n        return this;\n    }\n\n    reset(reset) {\n        this.reset_ = reset;\n        return this;\n    }\n\n    slackMS(slackMS) {\n        this.slackMS_ = slackMS;\n        return this;\n    }\n\n    maxBatchSize(maxBatchSize) {\n        this.maxBatchSize_ = maxBatchSize;\n        return this;\n    }\n\n    supportCORS(supportCORS) {\n        this.supportCORS_ = supportCORS;\n        return this;\n    }\n\n    errorHandler(errorHandler) {\n        this.errorHandler_ = errorHandler;\n        return this;\n    }\n\n    headersInfo(headersInfo) {\n        this.headersInfo_ = headersInfo;\n        return this;\n    }\n\n    build() {\n        console.log(\"OpenDolphin js found\");\n        var clientDolphin = new ClientDolphin();\n        var transmitter;\n        if (this.url_ != null && this.url_.length > 0) {\n            transmitter = new HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_, this.headersInfo_);\n        }\n        else {\n            transmitter = new NoTransmitter();\n        }\n        clientDolphin.setClientConnector(new ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n        clientDolphin.setClientModelStore(new ClientModelStore(clientDolphin));\n        console.log(\"ClientDolphin initialized\");\n        return clientDolphin;\n    }\n}","export class DolphinRemotingError extends Error {\n  constructor(message = 'Remoting Error', detail) {\n    super(message);\n    this.detail = detail || undefined;\n  }\n}\n\nexport class DolphinSessionError extends Error {\n  constructor(message = 'Session Error') {\n    super(message);\n  }\n}\n\nexport class HttpResponseError extends Error {\n  constructor(message = 'Http Response Error') {\n    super(message);\n  }\n}\n\nexport class HttpNetworkError extends Error {\n    constructor(message = 'Http Network Error') {\n        super(message);\n    }\n}","export default class EventBus {\n\n    constructor() {\n        this.eventHandlers = [];\n    }\n\n    onEvent(eventHandler) {\n        this.eventHandlers.push(eventHandler);\n    }\n\n    trigger(event) {\n        this.eventHandlers.forEach(handle => handle(event));\n    }\n}","import Codec from './commands/codec'\n\nexport default class HttpTransmitter {\n\n    constructor(url, reset = true, charset = \"UTF-8\", errorHandler = null, supportCORS = false, headersInfo = null) {\n        this.url = url;\n        this.charset = charset;\n        this.HttpCodes = {\n            finished: 4,\n            success: 200\n        };\n        this.errorHandler = errorHandler;\n        this.supportCORS = supportCORS;\n        this.headersInfo = headersInfo;\n        this.http = new XMLHttpRequest();\n        this.sig = new XMLHttpRequest();\n        if (this.supportCORS) {\n            if (\"withCredentials\" in this.http) {\n                this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                this.sig.withCredentials = true;\n            }\n        }\n        this.codec = new Codec();\n        if (reset) {\n            console.log('HttpTransmitter.invalidate() is deprecated. Use ClientDolphin.reset(OnSuccessHandler) instead');\n            this.invalidate();\n        }\n    }\n\n    transmit(commands, onDone) {\n        this.http.onerror = () => {\n            this.handleError('onerror', \"\");\n            onDone([]);\n        };\n        this.http.onreadystatechange = () => {\n            if (this.http.readyState == this.HttpCodes.finished) {\n                if (this.http.status == this.HttpCodes.success) {\n                    var responseText = this.http.responseText;\n                    if (responseText.trim().length > 0) {\n                        try {\n                            var responseCommands = this.codec.decode(responseText);\n                            onDone(responseCommands);\n                        }\n                        catch (err) {\n                            console.log(\"Error occurred parsing responseText: \", err);\n                            console.log(\"Incorrect responseText: \", responseText);\n                            this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        this.handleError('application', \"HttpTransmitter: empty responseText\");\n                        onDone([]);\n                    }\n                }\n                else {\n                    this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                    onDone([]);\n                }\n            }\n        };\n        this.http.open('POST', this.url, true);\n        this.setHeaders(this.http);\n        if (\"overrideMimeType\" in this.http) {\n            this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n        }\n        this.http.send(this.codec.encode(commands));\n    }\n\n    setHeaders(httpReq) {\n        if (this.headersInfo) {\n            for (var i in this.headersInfo) {\n                if (this.headersInfo.hasOwnProperty(i)) {\n                    httpReq.setRequestHeader(i, this.headersInfo[i]);\n                }\n            }\n        }\n    }\n\n    handleError(kind, message) {\n        var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n        if (this.errorHandler) {\n            this.errorHandler(errorEvent);\n        }\n        else {\n            console.log(\"Error occurred: \", errorEvent);\n        }\n    }\n\n    signal(command) {\n        this.sig.open('POST', this.url, true);\n        this.setHeaders(this.sig);\n        this.sig.send(this.codec.encode([command]));\n    }\n\n    invalidate() {\n        this.http.open('POST', this.url + 'invalidate?', false);\n        this.http.send();\n    }\n}","export default class NoTransmitter {\n\n    transmit(commands, onDone) {\n        // do nothing special\n        onDone([]);\n    }\n\n    signal() {\n        // do nothing\n    }\n\n    reset() {\n        // do nothing\n    }\n}","import DolphinBuilder from './dolphinBuilder'\n\nexport function dolphin(url, reset, slackMS = 300) {\n    return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n}\n\nexport function makeDolphin() {\n    return new DolphinBuilder();\n}","import Emitter from 'emitter-component';\n\n\nimport { exists } from './utils';\nimport { DolphinRemotingError, HttpNetworkError, DolphinSessionError, HttpResponseError } from './errors';\nimport Codec from './commands/codec';\nimport RemotingErrorHandler from './remotingErrorHandler';\n\n\nconst FINISHED = 4;\nconst SUCCESS = 200;\nconst REQUEST_TIMEOUT = 408;\n\nconst DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nconst CLIENT_ID_HTTP_HEADER_NAME = DOLPHIN_PLATFORM_PREFIX + 'dolphinClientId';\n\nexport default class PlatformHttpTransmitter {\n\n    constructor(url, config) {\n        this.url = url;\n        this.config = config;\n        this.headersInfo = exists(config) ? config.headersInfo : null;\n        let connectionConfig = exists(config) ? config.connection : null;\n        this.maxRetry = exists(connectionConfig) && exists(connectionConfig.maxRetry)?connectionConfig.maxRetry: 3;\n        this.timeout = exists(connectionConfig) && exists(connectionConfig.timeout)?connectionConfig.timeout: 5000;\n        this.failed_attempt = 0;\n    }\n\n    _handleError(reject, error) {\n        let connectionConfig = exists(this.config) ? this.config.connection : null;\n        let errorHandlers = exists(connectionConfig) && exists(connectionConfig.errorHandlers)?connectionConfig.errorHandlers: [new RemotingErrorHandler()];\n        errorHandlers.forEach(function(handler) {\n            handler.onError(error);\n        });\n        reject(error);\n    }\n\n    _send(commands) {\n        return new Promise((resolve, reject) => {\n            const http = new XMLHttpRequest();\n            http.withCredentials = true;\n            http.onerror = (errorContent) => {\n                this._handleError(reject, new HttpNetworkError('PlatformHttpTransmitter: Network error', errorContent));\n            }\n\n            http.onreadystatechange = () => {\n                if (http.readyState === FINISHED){\n                    switch (http.status) {\n\n                        case SUCCESS:\n                        {\n                            this.failed_attempt = 0;\n                            const currentClientId = http.getResponseHeader(CLIENT_ID_HTTP_HEADER_NAME);\n                            if (exists(currentClientId)) {\n                                if (exists(this.clientId) && this.clientId !== currentClientId) {\n                                    this._handleError(reject, new DolphinSessionError('PlatformHttpTransmitter: ClientId of the response did not match'));\n                                }\n                                this.clientId = currentClientId;\n                            } else {\n                                this._handleError(reject, new DolphinSessionError('PlatformHttpTransmitter: Server did not send a clientId'));\n                            }\n                            resolve(http.responseText);\n                            break;\n                        }\n\n                        case REQUEST_TIMEOUT:\n                            this._handleError(reject, new DolphinSessionError('PlatformHttpTransmitter: Session Timeout'));\n                            break;\n\n                        default:\n                            if(this.failed_attempt <= this.maxRetry){\n                                this.failed_attempt = this.failed_attempt + 1;\n                            }\n                            this._handleError(reject, new HttpResponseError('PlatformHttpTransmitter: HTTP Status != 200 (' + http.status + ')'));\n                            break;\n                    }\n                }\n            };\n\n            http.open('POST', this.url);\n            if (exists(this.clientId)) {\n                http.setRequestHeader(CLIENT_ID_HTTP_HEADER_NAME, this.clientId);\n            }\n\n            if (exists(this.headersInfo)) {\n                for (var i in this.headersInfo) {\n                    if (this.headersInfo.hasOwnProperty(i)) {\n                        http.setRequestHeader(i, this.headersInfo[i]);\n                    }\n                }\n            }\n            if (this.failed_attempt > this.maxRetry) {\n                setTimeout(function() {\n                    http.send(Codec.encode(commands));\n                }, this.timeout);\n            }else{\n                http.send(Codec.encode(commands));\n            }\n\n        });\n    }\n\n    transmit(commands, onDone) {\n        this._send(commands)\n            .then(responseText => {\n                if (responseText.trim().length > 0) {\n                    try {\n                        const responseCommands = Codec.decode(responseText);\n                        onDone(responseCommands);\n                    } catch (err) {\n                        this.emit('error', new DolphinRemotingError('PlatformHttpTransmitter: Parse error: (Incorrect response = ' + responseText + ')'));\n                        onDone([]);\n                    }\n                } else {\n                    this.emit('error', new DolphinRemotingError('PlatformHttpTransmitter: Empty response'));\n                    onDone([]);\n                }\n            })\n            .catch(error => {\n                this.emit('error', error);\n                onDone([]);\n            });\n    }\n\n    signal(command) {\n        this._send([command])\n            .catch(error => this.emit('error', error));\n    }\n}\n\nEmitter(PlatformHttpTransmitter.prototype);\n","export default class RemotingErrorHandler {\n\n    onError(error) {\n        window.console.error(error);\n    }\n\n}","var _checkMethodName;\n\nexport function exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nexport function checkMethod(name) {\n    _checkMethodName = name;\n}\n\nexport function checkParam(param, parameterName) {\n    if(!exists(param)) {\n        throw new Error('The parameter ' + parameterName + ' is mandatory in ' + _checkMethodName);\n    }\n}","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nvar dolphinClient = require('../bower_components/dolphin-platform-js/dist/dolphin-platform.js');\nangular.module('DolphinPlatform', []);\n\nangular.module('DolphinPlatform').provider('$dolphinConfig', [function () {\n\n    var $cfg = {};\n    this.configure = function (cfg) {\n        $cfg = cfg;\n    };\n\n    this.$get = function () {\n        return $cfg;\n    };\n\n}]);\n\nangular.module('DolphinPlatform').factory('clientContextFactory', function () {\n    return new dolphinClient.ClientContextFactory();\n});\n\nangular.module('DolphinPlatform').factory('vanillaClientContext', ['clientContextFactory', '$dolphinConfig', function (clientContextFactory, $dolphinConfig) {\n    return clientContextFactory.create($dolphinConfig.DOLPHIN_URL, $dolphinConfig);\n}]);\n\nangular.module('DolphinPlatform').factory('dolphinBinding', ['$rootScope', '$timeout', 'vanillaClientContext', '$log', function ($rootScope, $timeout, vanillaClientContext, $log) {\n\n    $rootScope.waitingForGlobalDolphinApply = false;\n\n    $rootScope.applyInAngular = function () {\n        if (!$rootScope.waitingForGlobalDolphinApply) {\n            $rootScope.waitingForGlobalDolphinApply = true;\n            $timeout(function () {\n                $rootScope.waitingForGlobalDolphinApply = false;\n                $log.debug('Angular apply is called by Dolphin Platform');\n                $rootScope.$apply();\n            }, 100);\n        }\n    };\n\n    var dolphinBinding = {\n\n        injectArray: function (baseArray, startIndex, insertArray) {\n            baseArray.splice.apply(baseArray, [startIndex, 0].concat(insertArray));\n        },\n        exists: function (object) {\n            return typeof object !== 'undefined' && object !== null;\n        },\n        deepEqual: function (array1, array2) {\n            if (array1 === array2 || (!this.exists(array1) && !this.exists(array2))) {\n                return true;\n            }\n            if (this.exists(array1) !== this.exists(array2)) {\n                return false;\n            }\n            var n = array1.length;\n            if (array2.length !== n) {\n                return false;\n            }\n            for (var i = 0; i < n; i++) {\n                if (array1[i] !== array2[i]) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        init: function (beanManager) {\n            beanManager.onAdded(dolphinBinding.onBeanAddedHandler);\n            beanManager.onRemoved(dolphinBinding.onBeanRemovedHandler);\n            beanManager.onBeanUpdate(dolphinBinding.onBeanUpdateHandler);\n            beanManager.onArrayUpdate(dolphinBinding.onArrayUpdateHandler);\n\n            $log.debug('Dolphin Platform binding listeners for Angular registered');\n        },\n        watchAttribute: function (bean, attribute) {\n            $log.debug('Added Angular listener for property ' + attribute + ' of bean ' + JSON.stringify(bean));\n            $rootScope.$watch(\n                function () {\n                    return bean[attribute];\n                },\n                function (newValue, oldValue) {\n                    $log.debug('Value ' + attribute + ' of bean ' + JSON.stringify(bean) + ' changed from ' + oldValue + ' to ' + newValue);\n                    vanillaClientContext.beanManager.classRepository.notifyBeanChange(bean, attribute, newValue);\n                }\n            );\n        },\n        onBeanAddedHandler: function (bean) {\n            $log.debug('Bean ' + JSON.stringify(bean) + ' added');\n\n            for (var attr in bean) {\n                dolphinBinding.watchAttribute(bean, attr);\n            }\n\n            $rootScope.applyInAngular();\n        },\n        onBeanRemovedHandler: function (bean) {\n            $log.debug('Bean ' + JSON.stringify(bean) + ' removed');\n            $rootScope.applyInAngular();\n        },\n        onBeanUpdateHandler: function (bean, propertyName, newValue, oldValue) {\n            var newProperty = true;\n            for (var attr in bean) {\n                if (attr === propertyName) {\n                    newProperty = false;\n                }\n            }\n\n            if (newProperty) {\n                $log.debug('Value ' + propertyName + ' was added to bean ' + JSON.stringify(bean));\n                dolphinBinding.watchAttribute(bean, propertyName);\n            }\n\n            if (oldValue === newValue) {\n                $log.debug('Received bean update for property ' + propertyName + ' without any change');\n                return;\n            }\n\n            $log.debug('Bean update for property ' + propertyName + ' with new value \"' + newValue + '\"');\n\n            bean[propertyName] = newValue;\n            $rootScope.applyInAngular();\n        },\n        onArrayUpdateHandler: function (bean, propertyName, index, count, newElements) {\n            var array = bean[propertyName];\n            var oldElements = array.slice(index, index + count);\n            if (dolphinBinding.deepEqual(newElements, oldElements)) {\n                return;\n            }\n\n            $log.debug('Array update for property ' + propertyName + ' starting at index ' + index + ' with ' + JSON.stringify(newElements));\n\n            if (typeof newElements === 'undefined' || (newElements && newElements.length === 0)) {\n                array.splice(index, count);\n                $rootScope.applyInAngular();\n            } else {\n                dolphinBinding.injectArray(array, index, newElements);\n\n                for (bean in newElements) {\n                    for (var attr in bean) {\n                        dolphinBinding.watchAttribute(bean, attr);\n                    }\n                }\n\n                $rootScope.applyInAngular();\n            }\n        }\n    };\n\n    $log.debug('Dolphin Platform binding created');\n\n    return dolphinBinding;\n\n}]);\n\nangular.module('DolphinPlatform').factory('clientContext', ['vanillaClientContext', 'dolphinBinding', '$window', '$log', function (vanillaClientContext, dolphinBinding, $window, $log) {\n    var clientContext = {\n        createController: function (scope, controllerName) {\n            return vanillaClientContext.createController(controllerName).then(function (controllerProxy) {\n                $log.debug('Creating Dolphin Platform controller ' + controllerName);\n                scope.$on('$destroy', function () {\n                    $log.debug('Destroying Dolphin Platform controller ' + controllerName);\n                    controllerProxy.destroy();\n                });\n                scope.model = controllerProxy.model;\n                return controllerProxy;\n            });\n        },\n        disconnect: function () {\n            vanillaClientContext.disconnect().then(function () {\n                $log.debug('Dolphin Platform context disconnected');\n            });\n        },\n        connect: function () {\n            vanillaClientContext.connect().then(function () {\n                $log.debug('Dolphin Platform context connected');\n            });\n        },\n        onConnect: function () {\n            return vanillaClientContext.onConnect().then(function () {\n                $log.debug('Dolphin Platform context connected');\n            });\n        }\n    };\n\n    dolphinBinding.init(vanillaClientContext.beanManager);\n    $window.onbeforeunload = clientContext.disconnect;\n\n    $log.debug('Dolphin Platform context created');\n\n    return clientContext;\n}]);\n"]}